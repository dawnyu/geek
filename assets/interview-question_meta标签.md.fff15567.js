import{_ as e,C as a,o,c as s,H as t,w as n,k as p,a as l,Q as c}from"./chunks/framework.f92cd432.js";const r=JSON.parse('{"title":"作为前端，你必须要知道的meta标签知识","description":"","frontmatter":{"createTime":"2022/11/13","tags":"html,面试题"},"headers":[],"relativePath":"interview-question/meta标签.md","filePath":"全部文档/前端面试题/html/meta标签.md","lastUpdated":1696860910000}'),i={name:"interview-question/meta标签.md"},d=p("h1",{id:"作为前端-你必须要知道的meta标签知识",tabindex:"-1"},[l("作为前端，你必须要知道的meta标签知识 "),p("a",{class:"header-anchor",href:"#作为前端-你必须要知道的meta标签知识","aria-label":'Permalink to "作为前端，你必须要知道的meta标签知识"'},"​")],-1),m=c('<h2 id="概览" tabindex="-1">概览 <a class="header-anchor" href="#概览" aria-label="Permalink to &quot;概览&quot;">​</a></h2><p>meta标签一般放在整个<code>html</code>页面的<code>head</code>部分，在<code>MDN</code>中对他这样定义：</p><blockquote><p>meta是<strong>文档级元数据元素</strong>，用来表示那些不能由其它 HTML 元相关元素（<code>&lt;base&gt;</code>、<code>&lt;link&gt;</code>, <code>&lt;script&gt;</code>、<code>&lt;style&gt;</code>或 <code>&lt;title&gt;</code>）之一表示的任何元数据。</p></blockquote><p>是不是感觉看起来很抽象？说白了就是为了传达信息。</p><p>先看看<code>meta</code> 元素定义的元数据的类型：</p><ul><li>如果设置了 <code>name</code>属性，<code>meta</code> 元素提供的是文档级别的元数据，应用于整个页面。</li><li>如果设置了 <code>http-equiv</code>属性，<code>meta</code> 元素则是编译指令，提供的信息与类似命名的 HTTP 头部相同。</li><li>如果设置了 <code>charset</code>属性，<code>meta</code> 元素是一个字符集声明，告诉文档使用哪种字符编码。</li><li>如果设置了 <code>itemprop</code> 属性，<code>meta</code> 元素提供用户定义的元数据。</li></ul><h2 id="name属性" tabindex="-1">name属性 <a class="header-anchor" href="#name属性" aria-label="Permalink to &quot;name属性&quot;">​</a></h2><p><code>name</code>和<code>content</code>一起使用，前者表示要表示的元数据的<code>名称</code>，后者是元数据的<code>值</code>。</p><h3 id="author" tabindex="-1">author <a class="header-anchor" href="#author" aria-label="Permalink to &quot;author&quot;">​</a></h3><p>用来表示网页的作者的名字，例如某个组织或者机构。</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">meta</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;author&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">content</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;aaa@mail.abc.com&quot;</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">meta</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;author&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">content</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;aaa@mail.abc.com&quot;</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="description" tabindex="-1">description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;description&quot;">​</a></h3><p>是一段简短而精确的、对页面内容的描述。以头条和taobao的<code>description</code>标签为例：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/49f4385dc1ed48feaa3fc5e0b46acf83~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?" alt="图片"></p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/825ce35f4abd4c06afa40e66013579bf~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?" alt="图片"></p><h3 id="keywords" tabindex="-1">keywords <a class="header-anchor" href="#keywords" aria-label="Permalink to &quot;keywords&quot;">​</a></h3><p>与页面内容相关的关键词，使用逗号分隔。某些搜索引擎在遇到这些关键字时，会用这些关键字对文档进行分类。 还是以头条和taobao为例</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0e7392738a9648d18a959b3cdb63cef5~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?" alt="图片"></p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/78198feb62944b84a2b464b9bec5df6c~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?" alt="图片"></p><h3 id="viewpoint" tabindex="-1">viewpoint <a class="header-anchor" href="#viewpoint" aria-label="Permalink to &quot;viewpoint&quot;">​</a></h3><p>为 viewport（视口）的初始大小提供指示。目前仅用于移动设备。</p><p>可能你也发现了，我们在<code>vscode</code>中自动生成<code>html</code>的代码片段时，会自动生成：</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">meta</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;viewport&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">content</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;width=device-width, initial-scale=1.0&quot;</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">meta</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;viewport&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">content</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;width=device-width, initial-scale=1.0&quot;</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>width</code>用来设置 viewport 的宽度为设备宽度;</p><p><code>initial-scale</code>为设备宽度与 viewport 大小之间的缩放比例。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1be03506cff042e89f244a225a6bcb05~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?" alt="图片"></p><h3 id="robots" tabindex="-1">robots <a class="header-anchor" href="#robots" aria-label="Permalink to &quot;robots&quot;">​</a></h3><p>表示爬虫对此页面的处理行为，或者说，应当遵守的规则，是用来做搜索引擎抓取的。</p><p>它的<code>content</code>可以为：</p><ol><li><code>all</code>:搜索引擎将索引此网页，并继续通过此网页的链接索引文件将被检索</li><li><code>none</code>:搜索引擎讲忽略此网页</li><li><code>index</code>:搜索引擎索引此网页</li><li><code>follow</code>:搜索引擎继续通过此网页的链接索引搜索其它的网页</li></ol><h3 id="renderer" tabindex="-1">renderer <a class="header-anchor" href="#renderer" aria-label="Permalink to &quot;renderer&quot;">​</a></h3><p>用来指定双核浏览器的渲染方式，比如360浏览器，我们可以通过这个设置来指定360浏览器的渲染方式</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">meta</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;renderer&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">content</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;webkit&quot;</span><span style="color:#E1E4E8;">&gt; //默认webkit内核</span></span>\n<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">meta</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;renderer&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">content</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;ie-comp&quot;</span><span style="color:#E1E4E8;">&gt; //默认IE兼容模式</span></span>\n<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">meta</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;renderer&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">content</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;ie-stand&quot;</span><span style="color:#E1E4E8;">&gt; //默认IE标准模式</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">meta</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;renderer&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">content</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;webkit&quot;</span><span style="color:#24292E;">&gt; //默认webkit内核</span></span>\n<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">meta</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;renderer&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">content</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;ie-comp&quot;</span><span style="color:#24292E;">&gt; //默认IE兼容模式</span></span>\n<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">meta</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;renderer&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">content</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;ie-stand&quot;</span><span style="color:#24292E;">&gt; //默认IE标准模式</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="http-equiv" tabindex="-1">http-equiv <a class="header-anchor" href="#http-equiv" aria-label="Permalink to &quot;http-equiv&quot;">​</a></h2><p><code>http-equiv</code>也是和<code>content</code>一起使用，前者表示要表示的元数据的<code>名称</code>，后者是元数据的<code>值</code>。</p><p><code>http-equiv</code> 所有允许的值都是特定 HTTP 头部的名称，</p><h3 id="x-ua-compatible" tabindex="-1">X-UA-Compatible <a class="header-anchor" href="#x-ua-compatible" aria-label="Permalink to &quot;X-UA-Compatible&quot;">​</a></h3><p>我们最常见的<code>http-equiv</code>值可能就是<code>X-UA-Compatible</code>了，它常常长这个样子：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0a51d78fca0e470d871cdad5aac6d331~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?" alt="图片"></p><p>它是用来是做IE浏览器适配的。</p><p><code>IE=edge</code>告诉浏览器，以当前浏览器支持的最新版本来渲染，IE9就以IE9版本来渲染。</p><p><code>chrome=1</code>告诉浏览器，如果当前IE浏览器安装了<code>Google Chrome Frame</code>插件，就以chrome内核来渲染页面。</p><p>像上图这种两者都存在的情况：如果有chrome插件，就以chrome内核渲染，如果没有，就以当前浏览器支持的最高版本渲染。</p><p>另外，这个属性支持的范围是<code>IE8-IE11</code></p><p>你可能注意到了，如果在我们的<code>http</code>头部中也设置了这个属性，并且和<code>meta</code>中设置的有冲突，那么哪一个优先呢？ 答案是：开发者偏好（<code>meta</code>元素）优先于Web服务器设置（HTTP头）。</p><h3 id="content-type" tabindex="-1">content-type <a class="header-anchor" href="#content-type" aria-label="Permalink to &quot;content-type&quot;">​</a></h3><p>用来声明文档类型和字符集</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e79c0e0e369749cc862755af01bfd01b~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?" alt="图片"></p><h3 id="x-dns-prefetch-control" tabindex="-1">x-dns-prefetch-control <a class="header-anchor" href="#x-dns-prefetch-control" aria-label="Permalink to &quot;x-dns-prefetch-control&quot;">​</a></h3><p>一般来说，HTML页面中的a标签会自动启用DNS提前解析来提升网站性能，但是在使用https协议的网站中失效了，我们可以设置：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/29822f4066704d098e91860a98d2cae2~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?" alt="图片"></p><p>来打开dns对a标签的提前解析</p><h3 id="cache-control、pragma、expires" tabindex="-1">cache-control、Pragma、Expires <a class="header-anchor" href="#cache-control、pragma、expires" aria-label="Permalink to &quot;cache-control、Pragma、Expires&quot;">​</a></h3><p>和缓存相关的设置，但是遗憾的是这些往往不生效，我们一般都通过<code>http headers</code>来设置缓存策略</p>',54);const h=e(i,[["render",function(e,p,l,c,r,i){const h=a("ArticleMetadata"),E=a("ClientOnly");return o(),s("div",null,[d,t(E,null,{default:n((()=>[t(h)])),_:1}),m])}]]);export{r as __pageData,h as default};
