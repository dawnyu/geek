import{_ as s,C as n,o as a,c as l,H as p,w as e,k as o,a as c,Q as r}from"./chunks/framework.80346561.js";const t=JSON.parse('{"title":"适配器模式","description":"","frontmatter":{"createTime":"2022/11/06","tag":"js,面试题,设计模式"},"headers":[],"relativePath":"interview-question/适配器模式.md","filePath":"s/前端面试题/设计模式/适配器模式.md","lastUpdated":1696495218000}'),E={name:"interview-question/适配器模式.md"},i=o("h1",{id:"适配器模式",tabindex:"-1"},[c("适配器模式 "),o("a",{class:"header-anchor",href:"#适配器模式","aria-label":'Permalink to "适配器模式"'},"​")],-1),y=r('<h2 id="场景" tabindex="-1">场景 <a class="header-anchor" href="#场景" aria-label="Permalink to &quot;场景&quot;">​</a></h2><p>当我们使用第三方库的时候，常常会遇到当前接口和第三方接口不匹配的情况，比如使用一个 <code>Table</code> 的组件，它要求我们返回的表格数据格式如下：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">code</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 业务 code</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">msg</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 出错时候的提示</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">data</span><span style="color:#E1E4E8;">: {</span></span>\n<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#B392F0;">total</span><span style="color:#E1E4E8;">: , </span><span style="color:#6A737D;">// 总数量</span></span>\n<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#B392F0;">list</span><span style="color:#E1E4E8;">: [], </span><span style="color:#6A737D;">// 表格列表</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">code</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 业务 code</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">msg</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 出错时候的提示</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">data</span><span style="color:#24292E;">: {</span></span>\n<span class="line"><span style="color:#24292E;">     </span><span style="color:#6F42C1;">total</span><span style="color:#24292E;">: , </span><span style="color:#6A737D;">// 总数量</span></span>\n<span class="line"><span style="color:#24292E;">     </span><span style="color:#6F42C1;">list</span><span style="color:#24292E;">: [], </span><span style="color:#6A737D;">// 表格列表</span></span>\n<span class="line"><span style="color:#24292E;">  }</span></span>\n<span class="line"><span style="color:#24292E;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>但后端返回的数据可能是这样的：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">code</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 业务 code</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">message</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 出错时候的提示</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">data</span><span style="color:#E1E4E8;">: {</span></span>\n<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#B392F0;">total</span><span style="color:#E1E4E8;">: , </span><span style="color:#6A737D;">// 总数量</span></span>\n<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#B392F0;">records</span><span style="color:#E1E4E8;">: [], </span><span style="color:#6A737D;">// 表格列表</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">code</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 业务 code</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">message</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 出错时候的提示</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">data</span><span style="color:#24292E;">: {</span></span>\n<span class="line"><span style="color:#24292E;">     </span><span style="color:#6F42C1;">total</span><span style="color:#24292E;">: , </span><span style="color:#6A737D;">// 总数量</span></span>\n<span class="line"><span style="color:#24292E;">     </span><span style="color:#6F42C1;">records</span><span style="color:#24292E;">: [], </span><span style="color:#6A737D;">// 表格列表</span></span>\n<span class="line"><span style="color:#24292E;">  }</span></span>\n<span class="line"><span style="color:#24292E;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>此时就可以通过适配器模式进行转换。</p><h2 id="适配器模式-1" tabindex="-1">适配器模式 <a class="header-anchor" href="#适配器模式-1" aria-label="Permalink to &quot;适配器模式&quot;">​</a></h2><p>看一下 <a href="https://link.juejin.cn/?target=" target="_blank" rel="noreferrer">维基百科</a> 给的定义：</p><blockquote><p>In <a href="https://link.juejin.cn/?target=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FSoftware_engineering" title="https://en.wikipedia.org/wiki/Software_engineering" target="_blank" rel="noreferrer">software engineering</a>, the <strong>adapter pattern</strong> is a <a href="https://link.juejin.cn/?target=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FSoftware_design_pattern" title="https://en.wikipedia.org/wiki/Software_design_pattern" target="_blank" rel="noreferrer">software design pattern</a> that allows the <a href="https://link.juejin.cn/?target=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FInterface_(computer_science)" title="https://en.wikipedia.org/wiki/Interface_(computer_science)" target="_blank" rel="noreferrer">interface</a> of an existing <a href="https://link.juejin.cn/?target=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FClass_(computer_science)" title="https://en.wikipedia.org/wiki/Class_(computer_science)" target="_blank" rel="noreferrer">class</a> to be used as another interface.[<a href="https://link.juejin.cn/?target=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FAdapter_pattern%23cite_note-HeadFirst-1" title="https://en.wikipedia.org/wiki/Adapter_pattern#cite_note-HeadFirst-1" target="_blank" rel="noreferrer">1]</a> It is often used to make existing classes work with others without modifying their <a href="https://link.juejin.cn/?target=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FSource_code" title="https://en.wikipedia.org/wiki/Source_code" target="_blank" rel="noreferrer">source code</a>.</p></blockquote><p>通过适配器模式可以让当前 <code>class</code> 不改变的情况下正常使用另一个 <code>class</code>。</p><p>在以 <code>class</code> 为基础的语言中有两种实现方式，一种是通过组合的方式，适配器类内部包含原对象的实例。一种是通过类继承，适配器类继承原 <code>class</code> 。可以看下 <code>UML</code> 类图：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b401fbb4fcb143d0b816e5430b06366c~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image" alt="image-20220213124112500"></p><p>左边的 <code>Adapter</code> 内部拥有 <code>Adaptee</code> 的实例，右边的 <code>Adapter</code> 类直接继承 <code>Adaptee</code> 类。</p><p>适配器会将 <code>Adaptee</code> 的 <code>specificOperation</code> 方法进行相应的处理包装为 <code>operation</code> 方法供 <code>client</code> 使用。</p><p>看一个简单的例子，现实生活中 <code>iPhone</code> 有两种耳机插口，一种是 <code>Lightning</code>，一种是传统的 <code>3.5</code> 毫米接口。如果是 <code>lightning</code> 插口的耳机想要插到传统的 <code>3.5</code> 毫米接口的电脑上就需要适配器了。</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Lightning耳机</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">插入Lighting接口</span><span style="color:#E1E4E8;">(){</span></span>\n<span class="line"><span style="color:#E1E4E8;">  System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;插入到Lighting耳机接口成功&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;"> }</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">传统耳机</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">插入到传统耳机孔</span><span style="color:#E1E4E8;">(){</span></span>\n<span class="line"><span style="color:#E1E4E8;">  System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;插入到传统耳机孔成功&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;"> }</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Lightning耳机到传统耳机适配器</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">传统耳机</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> Lightning耳机 </span><span style="color:#FFAB70;">Lightning耳机</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Lightning耳机到传统耳机适配器</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">Lightning耳机</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">耳机</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  Lightning耳机 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> 耳机;</span></span>\n<span class="line"><span style="color:#E1E4E8;"> }</span></span>\n<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">插入到传统耳机孔</span><span style="color:#E1E4E8;">(){</span></span>\n<span class="line"><span style="color:#E1E4E8;">  Lightning耳机.</span><span style="color:#B392F0;">插入Lighting接口</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;"> }</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">电脑传统耳机孔</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> 传统耳机 </span><span style="color:#FFAB70;">耳机</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">电脑传统耳机孔</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">传统耳机</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">传统耳机</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  耳机 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> 传统耳机;</span></span>\n<span class="line"><span style="color:#E1E4E8;"> }</span></span>\n<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">插入耳机</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  耳机.</span><span style="color:#B392F0;">插入到传统耳机孔</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;"> }</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"><span style="color:#E1E4E8;">public </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Main</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  传统耳机 传统耳机 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">传统耳机</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">  电脑传统耳机孔  电脑传统耳机孔 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">电脑传统耳机孔</span><span style="color:#E1E4E8;">(传统耳机);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  电脑传统耳机孔.</span><span style="color:#B392F0;">插入耳机</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// 插入到传统耳机孔成功</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  Lightning耳机 Lightning耳机 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Lightning耳机</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">  电脑传统耳机孔  电脑传统耳机孔2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">电脑传统耳机孔</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Lightning耳机到传统耳机适配器</span><span style="color:#E1E4E8;">(Lightning耳机)); </span></span>\n<span class="line"><span style="color:#E1E4E8;">  电脑传统耳机孔2.</span><span style="color:#B392F0;">插入耳机</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// 插入到Lighting耳机接口成功</span></span>\n<span class="line"><span style="color:#E1E4E8;"> }</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Lightning耳机</span><span style="color:#24292E;"> {</span></span>\n<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">插入Lighting接口</span><span style="color:#24292E;">(){</span></span>\n<span class="line"><span style="color:#24292E;">  System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;插入到Lighting耳机接口成功&quot;</span><span style="color:#24292E;">);</span></span>\n<span class="line"><span style="color:#24292E;"> }</span></span>\n<span class="line"><span style="color:#24292E;">}</span></span>\n<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">传统耳机</span><span style="color:#24292E;"> {</span></span>\n<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">插入到传统耳机孔</span><span style="color:#24292E;">(){</span></span>\n<span class="line"><span style="color:#24292E;">  System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;插入到传统耳机孔成功&quot;</span><span style="color:#24292E;">);</span></span>\n<span class="line"><span style="color:#24292E;"> }</span></span>\n<span class="line"><span style="color:#24292E;">}</span></span>\n<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Lightning耳机到传统耳机适配器</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">传统耳机</span><span style="color:#24292E;"> {</span></span>\n<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Lightning耳机 </span><span style="color:#E36209;">Lightning耳机</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Lightning耳机到传统耳机适配器</span><span style="color:#24292E;">(</span><span style="color:#E36209;">Lightning耳机</span><span style="color:#24292E;"> </span><span style="color:#E36209;">耳机</span><span style="color:#24292E;">) {</span></span>\n<span class="line"><span style="color:#24292E;">  Lightning耳机 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> 耳机;</span></span>\n<span class="line"><span style="color:#24292E;"> }</span></span>\n<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">插入到传统耳机孔</span><span style="color:#24292E;">(){</span></span>\n<span class="line"><span style="color:#24292E;">  Lightning耳机.</span><span style="color:#6F42C1;">插入Lighting接口</span><span style="color:#24292E;">();</span></span>\n<span class="line"><span style="color:#24292E;"> }</span></span>\n<span class="line"><span style="color:#24292E;">}</span></span>\n<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">电脑传统耳机孔</span><span style="color:#24292E;"> {</span></span>\n<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> 传统耳机 </span><span style="color:#E36209;">耳机</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">电脑传统耳机孔</span><span style="color:#24292E;">(</span><span style="color:#E36209;">传统耳机</span><span style="color:#24292E;"> </span><span style="color:#E36209;">传统耳机</span><span style="color:#24292E;">) {</span></span>\n<span class="line"><span style="color:#24292E;">  耳机 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> 传统耳机;</span></span>\n<span class="line"><span style="color:#24292E;"> }</span></span>\n<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">插入耳机</span><span style="color:#24292E;">() {</span></span>\n<span class="line"><span style="color:#24292E;">  耳机.</span><span style="color:#6F42C1;">插入到传统耳机孔</span><span style="color:#24292E;">();</span></span>\n<span class="line"><span style="color:#24292E;"> }</span></span>\n<span class="line"><span style="color:#24292E;">}</span></span>\n<span class="line"><span style="color:#24292E;">public </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Main</span><span style="color:#24292E;"> {</span></span>\n<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#E36209;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>\n<span class="line"><span style="color:#24292E;">  传统耳机 传统耳机 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">传统耳机</span><span style="color:#24292E;">();</span></span>\n<span class="line"><span style="color:#24292E;">  电脑传统耳机孔  电脑传统耳机孔 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">电脑传统耳机孔</span><span style="color:#24292E;">(传统耳机);</span></span>\n<span class="line"><span style="color:#24292E;">  电脑传统耳机孔.</span><span style="color:#6F42C1;">插入耳机</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 插入到传统耳机孔成功</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">  Lightning耳机 Lightning耳机 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Lightning耳机</span><span style="color:#24292E;">();</span></span>\n<span class="line"><span style="color:#24292E;">  电脑传统耳机孔  电脑传统耳机孔2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">电脑传统耳机孔</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Lightning耳机到传统耳机适配器</span><span style="color:#24292E;">(Lightning耳机)); </span></span>\n<span class="line"><span style="color:#24292E;">  电脑传统耳机孔2.</span><span style="color:#6F42C1;">插入耳机</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 插入到Lighting耳机接口成功</span></span>\n<span class="line"><span style="color:#24292E;"> }</span></span>\n<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><p>通过适配器我们成功将 <code>Lightning</code> 耳机插入到了电脑传统耳机孔，让我们再用 <code>js</code> 改写一下。</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Lightning耳机</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">插入Lighting接口</span><span style="color:#E1E4E8;">(){</span></span>\n<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;插入到Lighting耳机接口成功&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;"> }</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">传统耳机</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">插入到传统耳机孔</span><span style="color:#E1E4E8;">(){</span></span>\n<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;插入到传统耳机孔成功&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;"> }</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">电脑传统耳机孔</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">插入耳机</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">耳机</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        耳机.</span><span style="color:#B392F0;">插入到传统耳机孔</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Lightning耳机到传统耳机适配器</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">Lightning耳机</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">插入到传统耳机孔</span><span style="color:#E1E4E8;">(){</span></span>\n<span class="line"><span style="color:#E1E4E8;">            Lightning耳机.</span><span style="color:#B392F0;">插入Lighting接口</span><span style="color:#E1E4E8;">()</span></span>\n<span class="line"><span style="color:#E1E4E8;">        }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">电脑传统耳机孔.</span><span style="color:#B392F0;">插入耳机</span><span style="color:#E1E4E8;">(传统耳机) </span><span style="color:#6A737D;">// 插入到传统耳机孔成功</span></span>\n<span class="line"><span style="color:#E1E4E8;">电脑传统耳机孔.</span><span style="color:#B392F0;">插入耳机</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Lightning耳机到传统耳机适配器</span><span style="color:#E1E4E8;">(Lightning耳机)) </span><span style="color:#6A737D;">// 插入到Lighting耳机接口成功</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Lightning耳机</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">插入Lighting接口</span><span style="color:#24292E;">(){</span></span>\n<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;插入到Lighting耳机接口成功&quot;</span><span style="color:#24292E;">);</span></span>\n<span class="line"><span style="color:#24292E;"> }</span></span>\n<span class="line"><span style="color:#24292E;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">传统耳机</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">插入到传统耳机孔</span><span style="color:#24292E;">(){</span></span>\n<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;插入到传统耳机孔成功&quot;</span><span style="color:#24292E;">);</span></span>\n<span class="line"><span style="color:#24292E;"> }</span></span>\n<span class="line"><span style="color:#24292E;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">电脑传统耳机孔</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">插入耳机</span><span style="color:#24292E;">(</span><span style="color:#E36209;">耳机</span><span style="color:#24292E;">) {</span></span>\n<span class="line"><span style="color:#24292E;">        耳机.</span><span style="color:#6F42C1;">插入到传统耳机孔</span><span style="color:#24292E;">();</span></span>\n<span class="line"><span style="color:#24292E;">    }</span></span>\n<span class="line"><span style="color:#24292E;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Lightning耳机到传统耳机适配器</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">Lightning耳机</span><span style="color:#24292E;">) {</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">插入到传统耳机孔</span><span style="color:#24292E;">(){</span></span>\n<span class="line"><span style="color:#24292E;">            Lightning耳机.</span><span style="color:#6F42C1;">插入Lighting接口</span><span style="color:#24292E;">()</span></span>\n<span class="line"><span style="color:#24292E;">        }</span></span>\n<span class="line"><span style="color:#24292E;">    }</span></span>\n<span class="line"><span style="color:#24292E;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">电脑传统耳机孔.</span><span style="color:#6F42C1;">插入耳机</span><span style="color:#24292E;">(传统耳机) </span><span style="color:#6A737D;">// 插入到传统耳机孔成功</span></span>\n<span class="line"><span style="color:#24292E;">电脑传统耳机孔.</span><span style="color:#6F42C1;">插入耳机</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Lightning耳机到传统耳机适配器</span><span style="color:#24292E;">(Lightning耳机)) </span><span style="color:#6A737D;">// 插入到Lighting耳机接口成功</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h2 id="代码实现" tabindex="-1">代码实现 <a class="header-anchor" href="#代码实现" aria-label="Permalink to &quot;代码实现&quot;">​</a></h2><p>回到开头接口不匹配的问题上，<code>Table</code> 组件提供了一个 <code>responseProcessor</code> 的钩子，我们只需要通过这个钩子将接口返回的数据进行包装即可。</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">{</span></span>\n<span class="line"><span style="color:#e1e4e8;">  ...</span></span>\n<span class="line"><span style="color:#e1e4e8;">  responseProcessor(res) {</span></span>\n<span class="line"><span style="color:#e1e4e8;">    return {</span></span>\n<span class="line"><span style="color:#e1e4e8;">      ...res,</span></span>\n<span class="line"><span style="color:#e1e4e8;">      msg: res.message, // 出错时候的提示</span></span>\n<span class="line"><span style="color:#e1e4e8;">      data: {</span></span>\n<span class="line"><span style="color:#e1e4e8;">         ...res.data</span></span>\n<span class="line"><span style="color:#e1e4e8;">         list: res?.data?.records || [], // 表格列表</span></span>\n<span class="line"><span style="color:#e1e4e8;">      }</span></span>\n<span class="line"><span style="color:#e1e4e8;">    };</span></span>\n<span class="line"><span style="color:#e1e4e8;">  },</span></span>\n<span class="line"><span style="color:#e1e4e8;">  ...</span></span>\n<span class="line"><span style="color:#e1e4e8;">  </span></span>\n<span class="line"><span style="color:#e1e4e8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">{</span></span>\n<span class="line"><span style="color:#24292e;">  ...</span></span>\n<span class="line"><span style="color:#24292e;">  responseProcessor(res) {</span></span>\n<span class="line"><span style="color:#24292e;">    return {</span></span>\n<span class="line"><span style="color:#24292e;">      ...res,</span></span>\n<span class="line"><span style="color:#24292e;">      msg: res.message, // 出错时候的提示</span></span>\n<span class="line"><span style="color:#24292e;">      data: {</span></span>\n<span class="line"><span style="color:#24292e;">         ...res.data</span></span>\n<span class="line"><span style="color:#24292e;">         list: res?.data?.records || [], // 表格列表</span></span>\n<span class="line"><span style="color:#24292e;">      }</span></span>\n<span class="line"><span style="color:#24292e;">    };</span></span>\n<span class="line"><span style="color:#24292e;">  },</span></span>\n<span class="line"><span style="color:#24292e;">  ...</span></span>\n<span class="line"><span style="color:#24292e;">  </span></span>\n<span class="line"><span style="color:#24292e;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="更多场景" tabindex="-1">更多场景 <a class="header-anchor" href="#更多场景" aria-label="Permalink to &quot;更多场景&quot;">​</a></h2><p>除了应对数据格式不一致的问题，通过适配器模式我们还可以为上层提供统一接口，来解决兼容性问题。最典型的例子就是 <code>jQuery</code> ，可以看一下其中一段代码:</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Create the request object</span></span>\n<span class="line"><span style="color:#6A737D;">// (This is still attached to ajaxSettings for backward compatibility)</span></span>\n<span class="line"><span style="color:#E1E4E8;">jQuery.ajaxSettings.xhr </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> window.ActiveXObject </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">?</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// Support: IE6-IE8</span></span>\n<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// XHR cannot access local files, always use ActiveX for that case</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> ( </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.isLocal ) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createActiveXHR</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// Support: IE 9-11</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// IE seems to error on cross-domain PATCH requests when ActiveX XHR</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// is used. In IE 9+ always use the native XHR.</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// Note: this condition won&#39;t catch Edge as it doesn&#39;t define</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// document.documentMode but it also doesn&#39;t support ActiveX so it won&#39;t</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// reach this code.</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> ( document.documentMode </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;"> ) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createStandardXHR</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// Support: IE&lt;9</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// oldIE XHR does not support non-RFC2616 methods (#13240)</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// See http://msdn.microsoft.com/en-us/library/ie/ms536648(v=vs.85).aspx</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// and http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// Although this check for six methods instead of eight</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// since IE also does not support &quot;trace&quot; and &quot;connect&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">^</span><span style="color:#DBEDFF;">(get</span><span style="color:#F97583;">|</span><span style="color:#DBEDFF;">post</span><span style="color:#F97583;">|</span><span style="color:#DBEDFF;">head</span><span style="color:#F97583;">|</span><span style="color:#DBEDFF;">put</span><span style="color:#F97583;">|</span><span style="color:#DBEDFF;">delete</span><span style="color:#F97583;">|</span><span style="color:#DBEDFF;">options)</span><span style="color:#F97583;">$</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">i</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">( </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.type ) </span><span style="color:#F97583;">&amp;&amp;</span></span>\n<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">createStandardXHR</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createActiveXHR</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">:</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// For all other browsers, use the standard XMLHttpRequest object</span></span>\n<span class="line"><span style="color:#E1E4E8;"> createStandardXHR;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Create the request object</span></span>\n<span class="line"><span style="color:#6A737D;">// (This is still attached to ajaxSettings for backward compatibility)</span></span>\n<span class="line"><span style="color:#24292E;">jQuery.ajaxSettings.xhr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> window.ActiveXObject </span><span style="color:#D73A49;">!==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;"> </span><span style="color:#6A737D;">// Support: IE6-IE8</span></span>\n<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">() {</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// XHR cannot access local files, always use ActiveX for that case</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> ( </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.isLocal ) {</span></span>\n<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createActiveXHR</span><span style="color:#24292E;">();</span></span>\n<span class="line"><span style="color:#24292E;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// Support: IE 9-11</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// IE seems to error on cross-domain PATCH requests when ActiveX XHR</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// is used. In IE 9+ always use the native XHR.</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// Note: this condition won&#39;t catch Edge as it doesn&#39;t define</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// document.documentMode but it also doesn&#39;t support ActiveX so it won&#39;t</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// reach this code.</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> ( document.documentMode </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">8</span><span style="color:#24292E;"> ) {</span></span>\n<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createStandardXHR</span><span style="color:#24292E;">();</span></span>\n<span class="line"><span style="color:#24292E;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// Support: IE&lt;9</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// oldIE XHR does not support non-RFC2616 methods (#13240)</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// See http://msdn.microsoft.com/en-us/library/ie/ms536648(v=vs.85).aspx</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// and http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// Although this check for six methods instead of eight</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// since IE also does not support &quot;trace&quot; and &quot;connect&quot;</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#032F62;"> /</span><span style="color:#D73A49;">^</span><span style="color:#032F62;">(get</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">post</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">head</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">put</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">delete</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">options)</span><span style="color:#D73A49;">$</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">i</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">( </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.type ) </span><span style="color:#D73A49;">&amp;&amp;</span></span>\n<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">createStandardXHR</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createActiveXHR</span><span style="color:#24292E;">();</span></span>\n<span class="line"><span style="color:#24292E;"> } </span><span style="color:#D73A49;">:</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;"> </span><span style="color:#6A737D;">// For all other browsers, use the standard XMLHttpRequest object</span></span>\n<span class="line"><span style="color:#24292E;"> createStandardXHR;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h2 id="易混设计模式" tabindex="-1">易混设计模式 <a class="header-anchor" href="#易混设计模式" aria-label="Permalink to &quot;易混设计模式&quot;">​</a></h2><p>适配器模式和代理模式在代码结构上很像，代理模式也是对原对象进行包装处理。区别在于它们的意图不同：</p><ul><li><p>适配器模式是为了解决两个对象之间不匹配的问题，而原对象又不适合直接修改，此时可以使用适配器模式进行一层转换。</p></li><li><p>代理模式是为了增强原对象的功能，提供的接口不会改变。</p></li></ul>',27);const b=s(E,[["render",function(s,o,c,r,t,E){const b=n("ArticleMetadata"),u=n("ClientOnly");return a(),l("div",null,[i,p(u,null,{default:e((()=>[p(b)])),_:1}),y])}]]);export{t as __pageData,b as default};
