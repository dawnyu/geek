import{_ as s,C as n,o as a,c as l,H as p,w as o,k as e,a as t,Q as c}from"./chunks/framework.80346561.js";const r=JSON.parse('{"title":"图片懒加载","description":"","frontmatter":{"createTime":"2022/11/08","tag":"性能优化"},"headers":[],"relativePath":"interview-question/图片懒加载.md","filePath":"s/前端面试题/性能优化/图片懒加载.md","lastUpdated":1696495218000}'),E={name:"interview-question/图片懒加载.md"},y=e("h1",{id:"图片懒加载",tabindex:"-1"},[t("图片懒加载 "),e("a",{class:"header-anchor",href:"#图片懒加载","aria-label":'Permalink to "图片懒加载"'},"​")],-1),i=c('<h2 id="一、实现原理" tabindex="-1">一、实现原理 <a class="header-anchor" href="#一、实现原理" aria-label="Permalink to &quot;一、实现原理&quot;">​</a></h2><p><code>&lt;img&gt;</code>标签本身有一个<code>loading</code>属性来决定是否执行懒加载，但是实测中发现该属性在Edge浏览器中并不起作用，所以需要通过脚本的方式去实现。</p><p>简单来说，还没有出现在用户可见范围内的图像资源不加载</p><p>具体来说，通过判断<code>&lt;img&gt;</code>标签所处的坐标是否出现在了网页视口，将<code>&lt;img&gt;</code>标签的<code>src</code>值替换为存放在<code>data-src</code>属性里的真正图像链接</p><p><strong>判断<code>&lt;img&gt;</code>标签是否出现在可视范围有两种实现方式：</strong></p><ol><li>监听<code>window.onscroll</code>事件，在回调函数中去对比每个<code>&lt;img&gt;</code>标签的坐标和窗口尺寸</li><li>使用<a href="https://link.juejin.cn/?target=" target="_blank" rel="noreferrer">Intersection Observer</a>这个接口，判断<code>&lt;img&gt;</code>标签是否出现在可视范围</li></ol><h2 id="二、前置知识" tabindex="-1">二、前置知识 <a class="header-anchor" href="#二、前置知识" aria-label="Permalink to &quot;二、前置知识&quot;">​</a></h2><h3 id="_1、浏览器屏幕坐标系" tabindex="-1">1、浏览器屏幕坐标系 <a class="header-anchor" href="#_1、浏览器屏幕坐标系" aria-label="Permalink to &quot;1、浏览器屏幕坐标系&quot;">​</a></h3><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/290f87672eaa42a198ec139a5843f3ca~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image" alt="image-20221103101645081"></p><p>存在<strong>两种坐标系</strong>：</p><ul><li><strong>相对于窗口window</strong>，从窗口的（顶部，左部）开始计算，坐标变量为**<code>clientX</code>和<code>clinetY</code>**</li><li><strong>相对于文档document</strong>，从文档根的（顶部，左部）开始，坐标变量为**<code>pageX</code>和<code>pageY</code>**</li></ul><p>页面滚动到起点时，<code>(pageX,pageY)</code>和<code>(clientX,clientY)</code>相等</p><p>页面发生滚动（即滚动条移动）之后，<code>(pageX,pageY) = (clientX + scrollLeft, clinetY + scrollTop)</code>， 其中<code>scrollTop/scrollLeft</code>代表页面节点与文档根（顶部，左部）的<strong>滚动距离</strong>，可通过<code>window.pageYOffset</code>或<code>document.body.scrollTop</code>或<code>document.documentElement.scrollTop</code>获取</p><h3 id="_2、获取节点坐标-getboundingclinetrect" tabindex="-1">2、获取节点坐标：getBoundingClinetRect <a class="header-anchor" href="#_2、获取节点坐标-getboundingclinetrect" aria-label="Permalink to &quot;2、获取节点坐标：getBoundingClinetRect&quot;">​</a></h3><p>方法 <code>elem.getBoundingClientRect()</code> 返回最小矩形的窗口坐标，该矩形将 <code>elem</code> 作为内建 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fwww.w3.org%2FTR%2Fgeometry-1%2F%23domrect" title="https://www.w3.org/TR/geometry-1/#domrect" target="_blank" rel="noreferrer">DOMRect</a> 类的对象。</p><p>主要的 <code>DOMRect</code> 属性：</p><ul><li><code>x/y</code> —— 矩形原点相对于窗口的 X/Y 坐标</li><li><code>width/height</code> —— 矩形的 width/height（可以为负，负值表示右下角作为起点，正常是左上角作为起点）</li></ul><p>此外，还有派生（derived）属性：</p><ul><li><code>top/bottom</code> —— 顶部/底部矩形边缘的 Y 坐标</li><li><code>left/right</code> —— 左/右矩形边缘的 X 坐标</li></ul><p><strong>width/height为正数时的示意图如下：</strong></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2a251cd511a64e689827a8f1c3bd251d~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image" alt="image-20221103104333989"></p><p><strong>width/height为正数时的示意图如下：</strong></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c29183be90f34fe58a02d6b47ce185b1~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image" alt="image-20221103104751579"></p><p><strong>总结：获取节点的坐标</strong></p><ol start="0"><li>相对于窗口的坐标 —— <code>elem.getBoundingClientRect()</code>。</li><li>相对于文档的坐标 —— <code>elem.getBoundingClientRect()</code> 加上当前页面滚动。</li></ol><h3 id="_3、获取窗口尺寸" tabindex="-1">3、获取窗口尺寸 <a class="header-anchor" href="#_3、获取窗口尺寸" aria-label="Permalink to &quot;3、获取窗口尺寸&quot;">​</a></h3><p>窗口有两种定义，一种是当前窗口的实际大小（可能因为被缩小而变化），另外一种是屏幕的大小（固定值）</p><p><strong>第一种，获取当前窗口实际大小，使用window对象</strong></p><table><thead><tr><th></th><th>现代浏览器</th><th>老版浏览器</th></tr></thead><tbody><tr><td>窗口内高度（除去了菜单栏、工具栏等等）</td><td>innerHeight</td><td>document.documentElement.clientHeight 或 document.body.clientHeight</td></tr><tr><td>窗口内宽度</td><td>innerWidth</td><td>document.documentElement.clientWidth 或document.body.clientWidth</td></tr></tbody></table><p><strong>第二种，获取屏幕固定宽高</strong></p><table><thead><tr><th>screen.width</th><th>屏幕宽度</th></tr></thead><tbody><tr><td>screen.height</td><td>屏幕高度</td></tr></tbody></table><h3 id="_4、判断节点是否在可视范围" tabindex="-1">4、判断节点是否在可视范围 <a class="header-anchor" href="#_4、判断节点是否在可视范围" aria-label="Permalink to &quot;4、判断节点是否在可视范围&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isInView</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">elem</span><span style="color:#E1E4E8;">){</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(elem.</span><span style="color:#B392F0;">getBoundingClientRect</span><span style="color:#E1E4E8;">().top </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> window.innerHeight){</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;">{</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isInView</span><span style="color:#24292E;">(</span><span style="color:#E36209;">elem</span><span style="color:#24292E;">){</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(elem.</span><span style="color:#6F42C1;">getBoundingClientRect</span><span style="color:#24292E;">().top </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> window.innerHeight){</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>\n<span class="line"><span style="color:#24292E;">    }</span><span style="color:#D73A49;">else</span><span style="color:#24292E;">{</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>\n<span class="line"><span style="color:#24292E;">    }</span></span>\n<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="_5、intersection-observer" tabindex="-1">5、Intersection Observer <a class="header-anchor" href="#_5、intersection-observer" aria-label="Permalink to &quot;5、Intersection Observer&quot;">​</a></h3><p><a href="https://link.juejin.cn/?target=" target="_blank" rel="noreferrer">该接口</a>提供了一种异步观察目标元素与其祖先元素或顶级文档视窗 (<a href="https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FGlossary%2FViewport" title="https://developer.mozilla.org/zh-CN/docs/Glossary/Viewport" target="_blank" rel="noreferrer">viewport</a>) 交叉状态的方法</p><p>该接口可以方便的检测元素的可视状态，应用场景广泛：</p><ul><li>当页面滚动时，懒加载图片或其他内容。</li><li>实现“可无限滚动”网站，也就是当用户滚动网页时直接加载更多内容，无需翻页。</li><li>对某些元素进行埋点曝光</li><li>滚动到相应区域来执行相应动画或其他任务。</li></ul><p><strong>构造器</strong></p><p><code>IntersectionObserver()</code>，接受一个回调函数</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">observer</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">IntersectionObserver</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">entries</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;">{</span></span>\n<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(entries)</span></span>\n<span class="line"><span style="color:#E1E4E8;">})</span></span>\n<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> hList </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">querySelectorAll</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;h3&#39;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">observer.</span><span style="color:#B392F0;">observe</span><span style="color:#E1E4E8;">(hList[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">])</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">observer</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IntersectionObserver</span><span style="color:#24292E;">((</span><span style="color:#E36209;">entries</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">{</span></span>\n<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(entries)</span></span>\n<span class="line"><span style="color:#24292E;">})</span></span>\n<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> hList </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">querySelectorAll</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;h3&#39;</span><span style="color:#24292E;">)</span></span>\n<span class="line"><span style="color:#24292E;">observer.</span><span style="color:#6F42C1;">observe</span><span style="color:#24292E;">(hList[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>输出结果如下：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/aaeb6fa7ffe24d47b3b19b749ec6d26b~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image" alt="image-20221103130154181"></p><p>可以看到<code>enries</code>是一个<code>IntersectionObserverEntry</code>对象数组，该对象的属性如上，其中<code>isIntersecting</code>是一个Boolean值，表示被观察的节点是否与文档视窗交叉（即有没有出现在可见窗口中）</p><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td><a href="https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FAPI%2FIntersectionObserver%2Froot" title="https://developer.mozilla.org/zh-CN/docs/Web/API/IntersectionObserver/root" target="_blank" rel="noreferrer"><code>IntersectionObserver.root</code></a></td><td>所监听对象的具体祖先元素 (<a href="https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FAPI%2FElement" title="https://developer.mozilla.org/zh-CN/docs/Web/API/Element" target="_blank" rel="noreferrer"><code>element</code></a>)。如果未传入值或值为<code>null</code>，则默认使用顶级文档的视窗</td></tr></tbody></table><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td><a href="https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FAPI%2FIntersectionObserver%2Fdisconnect" title="https://developer.mozilla.org/zh-CN/docs/Web/API/IntersectionObserver/disconnect" target="_blank" rel="noreferrer"><code>disconnect()</code></a></td><td>使<code>IntersectionObserver</code>对象停止监听工作</td></tr><tr><td>[`observe()</td><td>开始监听一个目标元素</td></tr><tr><td><a href="https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FAPI%2FIntersectionObserver%2Funobserve" title="https://developer.mozilla.org/zh-CN/docs/Web/API/IntersectionObserver/unobserve" target="_blank" rel="noreferrer"><code>unobserve()</code></a></td><td>停止监听特定目标元素</td></tr></tbody></table><p><strong>用法示例：</strong></p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;!</span><span style="color:#85E89D;">DOCTYPE</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">html</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">lang</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;en&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">head</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">title</span><span style="color:#E1E4E8;">&gt;Document&lt;/</span><span style="color:#85E89D;">title</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">style</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">h3</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">margin</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">200</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">style</span><span style="color:#F97583;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">head</span><span style="color:#F97583;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">body</span><span style="color:#F97583;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">div</span><span style="color:#F97583;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">h3</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">测试文本1&lt;/</span><span style="color:#85E89D;">h3</span><span style="color:#F97583;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">h3</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">测试文本2&lt;/</span><span style="color:#85E89D;">h3</span><span style="color:#F97583;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">h3</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">测试文本3&lt;/</span><span style="color:#85E89D;">h3</span><span style="color:#F97583;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">h3</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">测试文本4&lt;/</span><span style="color:#85E89D;">h3</span><span style="color:#F97583;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">h3</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">测试文本5&lt;/</span><span style="color:#85E89D;">h3</span><span style="color:#F97583;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">div</span><span style="color:#F97583;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">script</span><span style="color:#F97583;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        const observer = new IntersectionObserver((entries) =</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">entries</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">forEach</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">entry</span><span style="color:#E1E4E8;"> =&gt; {</span></span>\n<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">entry</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">isIntersecting</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#79B8FF;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">node</span><span style="color:#E1E4E8;"> = </span><span style="color:#79B8FF;">entry</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">target</span></span>\n<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#79B8FF;">console</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">node</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">textContent</span><span style="color:#E1E4E8;"> + &#39; 出现在了窗口中&#39;)</span></span>\n<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#79B8FF;">observer</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">unobserve</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">node</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">                }</span></span>\n<span class="line"><span style="color:#E1E4E8;">            })</span></span>\n<span class="line"><span style="color:#E1E4E8;">        })</span></span>\n<span class="line"><span style="color:#E1E4E8;">        let hList = document.querySelectorAll(&#39;h3&#39;)</span></span>\n<span class="line"><span style="color:#E1E4E8;">        hList.forEach(h =</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">observer</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">observe</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">h</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">        })</span></span>\n<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">script</span><span style="color:#F97583;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">body</span><span style="color:#F97583;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">html</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;!</span><span style="color:#22863A;">DOCTYPE</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">html</span><span style="color:#24292E;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">html</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">lang</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;en&quot;</span><span style="color:#24292E;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">head</span><span style="color:#24292E;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;Document&lt;/</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">style</span><span style="color:#24292E;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">h3</span><span style="color:#24292E;"> {</span></span>\n<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">margin</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">200</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">        }</span></span>\n<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">style</span><span style="color:#D73A49;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">head</span><span style="color:#D73A49;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">body</span><span style="color:#D73A49;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">div</span><span style="color:#D73A49;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">h3</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">测试文本1&lt;/</span><span style="color:#22863A;">h3</span><span style="color:#D73A49;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">h3</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">测试文本2&lt;/</span><span style="color:#22863A;">h3</span><span style="color:#D73A49;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">h3</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">测试文本3&lt;/</span><span style="color:#22863A;">h3</span><span style="color:#D73A49;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">h3</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">测试文本4&lt;/</span><span style="color:#22863A;">h3</span><span style="color:#D73A49;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">h3</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">测试文本5&lt;/</span><span style="color:#22863A;">h3</span><span style="color:#D73A49;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">div</span><span style="color:#D73A49;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">script</span><span style="color:#D73A49;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">        const observer = new IntersectionObserver((entries) =</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> {</span></span>\n<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">entries</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">forEach</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">entry</span><span style="color:#24292E;"> =&gt; {</span></span>\n<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">entry</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">isIntersecting</span><span style="color:#24292E;">) {</span></span>\n<span class="line"><span style="color:#24292E;">                    </span><span style="color:#005CC5;">let</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">node</span><span style="color:#24292E;"> = </span><span style="color:#005CC5;">entry</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">target</span></span>\n<span class="line"><span style="color:#24292E;">                    </span><span style="color:#005CC5;">console</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">log</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">node</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">textContent</span><span style="color:#24292E;"> + &#39; 出现在了窗口中&#39;)</span></span>\n<span class="line"><span style="color:#24292E;">                    </span><span style="color:#005CC5;">observer</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">unobserve</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">node</span><span style="color:#24292E;">)</span></span>\n<span class="line"><span style="color:#24292E;">                }</span></span>\n<span class="line"><span style="color:#24292E;">            })</span></span>\n<span class="line"><span style="color:#24292E;">        })</span></span>\n<span class="line"><span style="color:#24292E;">        let hList = document.querySelectorAll(&#39;h3&#39;)</span></span>\n<span class="line"><span style="color:#24292E;">        hList.forEach(h =</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> {</span></span>\n<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">observer</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">observe</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">h</span><span style="color:#24292E;">)</span></span>\n<span class="line"><span style="color:#24292E;">        })</span></span>\n<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">script</span><span style="color:#D73A49;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">body</span><span style="color:#D73A49;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">html</span><span style="color:#D73A49;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f30394885da047b087f008ad10a4c1c0~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image" alt="image-20221103130952810"></p><h2 id="三、动手实践" tabindex="-1">三、动手实践 <a class="header-anchor" href="#三、动手实践" aria-label="Permalink to &quot;三、动手实践&quot;">​</a></h2><p>第一种方式：监听<code>window.onscroll</code>事件，在回调中判断图片是否出现在窗口可视范围，使用节流优化监听事件</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;!</span><span style="color:#85E89D;">DOCTYPE</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">html</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">lang</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;en&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">head</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">title</span><span style="color:#E1E4E8;">&gt;Document&lt;/</span><span style="color:#85E89D;">title</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">style</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">img</span><span style="color:#E1E4E8;">{</span></span>\n<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">display</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">block</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">height</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">400</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">style</span><span style="color:#F97583;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">head</span><span style="color:#F97583;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">body</span><span style="color:#F97583;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">div</span><span style="color:#F97583;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">img</span><span style="color:#E1E4E8;"> src=&quot;https://</span><span style="color:#85E89D;">tse4-mm</span><span style="color:#B392F0;">.cn.bing</span><span style="color:#E1E4E8;">.net/th/id/OIP-C.nRlAFygdctTCHmIWN7GxRwHaEK?pid=ImgDet&amp;rs=1&quot; </span><span style="color:#85E89D;">data-src</span><span style="color:#E1E4E8;">=&quot;https://</span><span style="color:#85E89D;">qiuzcc-typora-images</span><span style="color:#B392F0;">.oss-cn-shenzhen.aliyuncs</span><span style="color:#E1E4E8;">.com/images/2022/202210141603798.JPG&quot; alt=&quot;&quot;</span><span style="color:#F97583;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">​</span></span>\n<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">img</span><span style="color:#E1E4E8;"> src=&quot;https://</span><span style="color:#85E89D;">tse4-mm</span><span style="color:#B392F0;">.cn.bing</span><span style="color:#E1E4E8;">.net/th/id/OIP-C.nRlAFygdctTCHmIWN7GxRwHaEK?pid=ImgDet&amp;rs=1&quot; </span><span style="color:#85E89D;">data-src</span><span style="color:#E1E4E8;">=&quot;https://</span><span style="color:#85E89D;">qiuzcc-typora-images</span><span style="color:#B392F0;">.oss-cn-shenzhen.aliyuncs</span><span style="color:#E1E4E8;">.com/images/2022/%E9%AA%91%E8%A1%8C.jpg&quot; alt=&quot;&quot;</span><span style="color:#F97583;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">​</span></span>\n<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">img</span><span style="color:#E1E4E8;"> src=&quot;https://</span><span style="color:#85E89D;">tse4-mm</span><span style="color:#B392F0;">.cn.bing</span><span style="color:#E1E4E8;">.net/th/id/OIP-C.nRlAFygdctTCHmIWN7GxRwHaEK?pid=ImgDet&amp;rs=1&quot; </span><span style="color:#85E89D;">data-src</span><span style="color:#E1E4E8;">=&quot;https://</span><span style="color:#85E89D;">qiuzcc-typora-images</span><span style="color:#B392F0;">.oss-cn-shenzhen.aliyuncs</span><span style="color:#E1E4E8;">.com/images/2022/202210141601847.jpg&quot; alt=&quot;&quot;</span><span style="color:#F97583;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">​</span></span>\n<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">img</span><span style="color:#E1E4E8;"> src=&quot;https://</span><span style="color:#85E89D;">tse4-mm</span><span style="color:#B392F0;">.cn.bing</span><span style="color:#E1E4E8;">.net/th/id/OIP-C.nRlAFygdctTCHmIWN7GxRwHaEK?pid=ImgDet&amp;rs=1&quot; </span><span style="color:#85E89D;">data-src</span><span style="color:#E1E4E8;">=&quot;https://</span><span style="color:#85E89D;">qiuzcc-typora-images</span><span style="color:#B392F0;">.oss-cn-shenzhen.aliyuncs</span><span style="color:#E1E4E8;">.com/images/2022/202210121140688.jpg&quot; alt=&quot;&quot;</span><span style="color:#F97583;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span></span>\n<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">img</span><span style="color:#E1E4E8;"> src=&quot;https://</span><span style="color:#85E89D;">tse4-mm</span><span style="color:#B392F0;">.cn.bing</span><span style="color:#E1E4E8;">.net/th/id/OIP-C.nRlAFygdctTCHmIWN7GxRwHaEK?pid=ImgDet&amp;rs=1&quot; </span><span style="color:#85E89D;">data-src</span><span style="color:#E1E4E8;">=&quot;https://</span><span style="color:#85E89D;">qiuzcc-typora-images</span><span style="color:#B392F0;">.oss-cn-shenzhen.aliyuncs</span><span style="color:#E1E4E8;">.com/images/2022/202205270028510.png&quot; alt=&quot;&quot;</span><span style="color:#F97583;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span></span>\n<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">div</span><span style="color:#F97583;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">script</span><span style="color:#F97583;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        function throttle(fn,delay){</span></span>\n<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">timeoutId</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">function</span><span style="color:#E1E4E8;">(){</span></span>\n<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">context</span><span style="color:#E1E4E8;"> = </span><span style="color:#79B8FF;">this</span></span>\n<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">args</span><span style="color:#E1E4E8;"> = </span><span style="color:#79B8FF;">arguments</span></span>\n<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">if</span><span style="color:#E1E4E8;">(!</span><span style="color:#79B8FF;">timeoutId</span><span style="color:#E1E4E8;">){</span></span>\n<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#79B8FF;">timeoutId</span><span style="color:#E1E4E8;"> = </span><span style="color:#79B8FF;">setTimeout</span><span style="color:#E1E4E8;">(()=&gt;{</span></span>\n<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#79B8FF;">timeoutId</span><span style="color:#E1E4E8;">=</span><span style="color:#79B8FF;">null</span></span>\n<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#79B8FF;">fn</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">apply</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">context</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">args</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">                    },delay)</span></span>\n<span class="line"><span style="color:#E1E4E8;">                }</span></span>\n<span class="line"><span style="color:#E1E4E8;">            }</span></span>\n<span class="line"><span style="color:#E1E4E8;">        }</span></span>\n<span class="line"><span style="color:#E1E4E8;">       </span></span>\n<span class="line"><span style="color:#E1E4E8;">        let start = 0   //start需要声明为全局变量，否则每次调用函数start都会重新刷新为0，也就失去了它的意义了</span></span>\n<span class="line"><span style="color:#E1E4E8;">        function imgLazyLoad(){</span></span>\n<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">console</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">log</span><span style="color:#E1E4E8;">(&#39;触发</span><span style="color:#79B8FF;">imgLazyLoad</span><span style="color:#E1E4E8;">&#39;)</span></span>\n<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">imgs</span><span style="color:#E1E4E8;"> = </span><span style="color:#79B8FF;">document</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">querySelectorAll</span><span style="color:#E1E4E8;">(&#39;</span><span style="color:#79B8FF;">img</span><span style="color:#E1E4E8;">&#39;)</span></span>\n<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">i</span><span style="color:#E1E4E8;">=</span><span style="color:#79B8FF;">start</span><span style="color:#E1E4E8;">;</span><span style="color:#79B8FF;">i</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">imgs</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">;</span><span style="color:#79B8FF;">i</span><span style="color:#E1E4E8;">++){</span></span>\n<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">img</span><span style="color:#E1E4E8;"> = </span><span style="color:#79B8FF;">imgs</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">i</span><span style="color:#E1E4E8;">]</span></span>\n<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">img</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">getBoundingClientRect</span><span style="color:#E1E4E8;">().</span><span style="color:#79B8FF;">top</span><span style="color:#E1E4E8;"> &lt;= </span><span style="color:#79B8FF;">window</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">innerHeight</span><span style="color:#E1E4E8;">){</span></span>\n<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#79B8FF;">img</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">src</span><span style="color:#E1E4E8;"> = </span><span style="color:#79B8FF;">img</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">dataset</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">src</span></span>\n<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#79B8FF;">start</span><span style="color:#E1E4E8;"> = </span><span style="color:#79B8FF;">i</span><span style="color:#E1E4E8;">+1</span></span>\n<span class="line"><span style="color:#E1E4E8;">                }</span></span>\n<span class="line"><span style="color:#E1E4E8;">            }</span></span>\n<span class="line"><span style="color:#E1E4E8;">        }</span></span>\n<span class="line"><span style="color:#E1E4E8;">        window</span><span style="color:#B392F0;">.onscroll</span><span style="color:#E1E4E8;"> = throttle(imgLazyLoad,250)</span></span>\n<span class="line"><span style="color:#E1E4E8;">        imgLazyLoad()</span></span>\n<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">script</span><span style="color:#F97583;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">body</span><span style="color:#F97583;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">html</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;!</span><span style="color:#22863A;">DOCTYPE</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">html</span><span style="color:#24292E;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">html</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">lang</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;en&quot;</span><span style="color:#24292E;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">head</span><span style="color:#24292E;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;Document&lt;/</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">style</span><span style="color:#24292E;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">img</span><span style="color:#24292E;">{</span></span>\n<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">display</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">block</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">height</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">400</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">        }</span></span>\n<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">style</span><span style="color:#D73A49;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">head</span><span style="color:#D73A49;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">body</span><span style="color:#D73A49;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">div</span><span style="color:#D73A49;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">img</span><span style="color:#24292E;"> src=&quot;https://</span><span style="color:#22863A;">tse4-mm</span><span style="color:#6F42C1;">.cn.bing</span><span style="color:#24292E;">.net/th/id/OIP-C.nRlAFygdctTCHmIWN7GxRwHaEK?pid=ImgDet&amp;rs=1&quot; </span><span style="color:#22863A;">data-src</span><span style="color:#24292E;">=&quot;https://</span><span style="color:#22863A;">qiuzcc-typora-images</span><span style="color:#6F42C1;">.oss-cn-shenzhen.aliyuncs</span><span style="color:#24292E;">.com/images/2022/202210141603798.JPG&quot; alt=&quot;&quot;</span><span style="color:#D73A49;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">​</span></span>\n<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">img</span><span style="color:#24292E;"> src=&quot;https://</span><span style="color:#22863A;">tse4-mm</span><span style="color:#6F42C1;">.cn.bing</span><span style="color:#24292E;">.net/th/id/OIP-C.nRlAFygdctTCHmIWN7GxRwHaEK?pid=ImgDet&amp;rs=1&quot; </span><span style="color:#22863A;">data-src</span><span style="color:#24292E;">=&quot;https://</span><span style="color:#22863A;">qiuzcc-typora-images</span><span style="color:#6F42C1;">.oss-cn-shenzhen.aliyuncs</span><span style="color:#24292E;">.com/images/2022/%E9%AA%91%E8%A1%8C.jpg&quot; alt=&quot;&quot;</span><span style="color:#D73A49;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">​</span></span>\n<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">img</span><span style="color:#24292E;"> src=&quot;https://</span><span style="color:#22863A;">tse4-mm</span><span style="color:#6F42C1;">.cn.bing</span><span style="color:#24292E;">.net/th/id/OIP-C.nRlAFygdctTCHmIWN7GxRwHaEK?pid=ImgDet&amp;rs=1&quot; </span><span style="color:#22863A;">data-src</span><span style="color:#24292E;">=&quot;https://</span><span style="color:#22863A;">qiuzcc-typora-images</span><span style="color:#6F42C1;">.oss-cn-shenzhen.aliyuncs</span><span style="color:#24292E;">.com/images/2022/202210141601847.jpg&quot; alt=&quot;&quot;</span><span style="color:#D73A49;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">​</span></span>\n<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">img</span><span style="color:#24292E;"> src=&quot;https://</span><span style="color:#22863A;">tse4-mm</span><span style="color:#6F42C1;">.cn.bing</span><span style="color:#24292E;">.net/th/id/OIP-C.nRlAFygdctTCHmIWN7GxRwHaEK?pid=ImgDet&amp;rs=1&quot; </span><span style="color:#22863A;">data-src</span><span style="color:#24292E;">=&quot;https://</span><span style="color:#22863A;">qiuzcc-typora-images</span><span style="color:#6F42C1;">.oss-cn-shenzhen.aliyuncs</span><span style="color:#24292E;">.com/images/2022/202210121140688.jpg&quot; alt=&quot;&quot;</span><span style="color:#D73A49;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">        </span></span>\n<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">img</span><span style="color:#24292E;"> src=&quot;https://</span><span style="color:#22863A;">tse4-mm</span><span style="color:#6F42C1;">.cn.bing</span><span style="color:#24292E;">.net/th/id/OIP-C.nRlAFygdctTCHmIWN7GxRwHaEK?pid=ImgDet&amp;rs=1&quot; </span><span style="color:#22863A;">data-src</span><span style="color:#24292E;">=&quot;https://</span><span style="color:#22863A;">qiuzcc-typora-images</span><span style="color:#6F42C1;">.oss-cn-shenzhen.aliyuncs</span><span style="color:#24292E;">.com/images/2022/202205270028510.png&quot; alt=&quot;&quot;</span><span style="color:#D73A49;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">        </span></span>\n<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">div</span><span style="color:#D73A49;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">script</span><span style="color:#D73A49;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">        function throttle(fn,delay){</span></span>\n<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">let</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">timeoutId</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">function</span><span style="color:#24292E;">(){</span></span>\n<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">let</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">context</span><span style="color:#24292E;"> = </span><span style="color:#005CC5;">this</span></span>\n<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">let</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">args</span><span style="color:#24292E;"> = </span><span style="color:#005CC5;">arguments</span></span>\n<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">if</span><span style="color:#24292E;">(!</span><span style="color:#005CC5;">timeoutId</span><span style="color:#24292E;">){</span></span>\n<span class="line"><span style="color:#24292E;">                    </span><span style="color:#005CC5;">timeoutId</span><span style="color:#24292E;"> = </span><span style="color:#005CC5;">setTimeout</span><span style="color:#24292E;">(()=&gt;{</span></span>\n<span class="line"><span style="color:#24292E;">                        </span><span style="color:#005CC5;">timeoutId</span><span style="color:#24292E;">=</span><span style="color:#005CC5;">null</span></span>\n<span class="line"><span style="color:#24292E;">                        </span><span style="color:#005CC5;">fn</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">apply</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">context</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">args</span><span style="color:#24292E;">)</span></span>\n<span class="line"><span style="color:#24292E;">                    },delay)</span></span>\n<span class="line"><span style="color:#24292E;">                }</span></span>\n<span class="line"><span style="color:#24292E;">            }</span></span>\n<span class="line"><span style="color:#24292E;">        }</span></span>\n<span class="line"><span style="color:#24292E;">       </span></span>\n<span class="line"><span style="color:#24292E;">        let start = 0   //start需要声明为全局变量，否则每次调用函数start都会重新刷新为0，也就失去了它的意义了</span></span>\n<span class="line"><span style="color:#24292E;">        function imgLazyLoad(){</span></span>\n<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">console</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">log</span><span style="color:#24292E;">(&#39;触发</span><span style="color:#005CC5;">imgLazyLoad</span><span style="color:#24292E;">&#39;)</span></span>\n<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">let</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">imgs</span><span style="color:#24292E;"> = </span><span style="color:#005CC5;">document</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">querySelectorAll</span><span style="color:#24292E;">(&#39;</span><span style="color:#005CC5;">img</span><span style="color:#24292E;">&#39;)</span></span>\n<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">for</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">let</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">i</span><span style="color:#24292E;">=</span><span style="color:#005CC5;">start</span><span style="color:#24292E;">;</span><span style="color:#005CC5;">i</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">imgs</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">;</span><span style="color:#005CC5;">i</span><span style="color:#24292E;">++){</span></span>\n<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">let</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">img</span><span style="color:#24292E;"> = </span><span style="color:#005CC5;">imgs</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">i</span><span style="color:#24292E;">]</span></span>\n<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">if</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">img</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">getBoundingClientRect</span><span style="color:#24292E;">().</span><span style="color:#005CC5;">top</span><span style="color:#24292E;"> &lt;= </span><span style="color:#005CC5;">window</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">innerHeight</span><span style="color:#24292E;">){</span></span>\n<span class="line"><span style="color:#24292E;">                    </span><span style="color:#005CC5;">img</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">src</span><span style="color:#24292E;"> = </span><span style="color:#005CC5;">img</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">dataset</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">src</span></span>\n<span class="line"><span style="color:#24292E;">                    </span><span style="color:#005CC5;">start</span><span style="color:#24292E;"> = </span><span style="color:#005CC5;">i</span><span style="color:#24292E;">+1</span></span>\n<span class="line"><span style="color:#24292E;">                }</span></span>\n<span class="line"><span style="color:#24292E;">            }</span></span>\n<span class="line"><span style="color:#24292E;">        }</span></span>\n<span class="line"><span style="color:#24292E;">        window</span><span style="color:#6F42C1;">.onscroll</span><span style="color:#24292E;"> = throttle(imgLazyLoad,250)</span></span>\n<span class="line"><span style="color:#24292E;">        imgLazyLoad()</span></span>\n<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">script</span><span style="color:#D73A49;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">body</span><span style="color:#D73A49;">&gt;</span></span>\n<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">html</span><span style="color:#D73A49;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div><p>第二种方式：使用<code>IntersectionObserver</code></p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//替换&lt;script&gt;部分</span></span>\n<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">imgLazyLoad</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">imgs</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    imgs.</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">event</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;">{</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(event.isIntersecting){</span></span>\n<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">image</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> event.target</span></span>\n<span class="line"><span style="color:#E1E4E8;">            image.src </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> image.dataset.src</span></span>\n<span class="line"><span style="color:#E1E4E8;">            observer.</span><span style="color:#B392F0;">unobserve</span><span style="color:#E1E4E8;">(image)</span></span>\n<span class="line"><span style="color:#E1E4E8;">            console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;triger&#39;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">        }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    })</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">observer</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">IntersectionObserver</span><span style="color:#E1E4E8;">(imgLazyLoad)</span></span>\n<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> imgs </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">querySelectorAll</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;img&#39;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">imgs.</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">img</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    observer.</span><span style="color:#B392F0;">observe</span><span style="color:#E1E4E8;">(img)</span></span>\n<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//替换&lt;script&gt;部分</span></span>\n<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">imgLazyLoad</span><span style="color:#24292E;">(</span><span style="color:#E36209;">imgs</span><span style="color:#24292E;">) {</span></span>\n<span class="line"><span style="color:#24292E;">    imgs.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">(</span><span style="color:#E36209;">event</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">{</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(event.isIntersecting){</span></span>\n<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">image</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> event.target</span></span>\n<span class="line"><span style="color:#24292E;">            image.src </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> image.dataset.src</span></span>\n<span class="line"><span style="color:#24292E;">            observer.</span><span style="color:#6F42C1;">unobserve</span><span style="color:#24292E;">(image)</span></span>\n<span class="line"><span style="color:#24292E;">            console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;triger&#39;</span><span style="color:#24292E;">)</span></span>\n<span class="line"><span style="color:#24292E;">        }</span></span>\n<span class="line"><span style="color:#24292E;">    })</span></span>\n<span class="line"><span style="color:#24292E;">}</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">observer</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IntersectionObserver</span><span style="color:#24292E;">(imgLazyLoad)</span></span>\n<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> imgs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">querySelectorAll</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;img&#39;</span><span style="color:#24292E;">)</span></span>\n<span class="line"><span style="color:#24292E;">imgs.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">(</span><span style="color:#E36209;">img</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>\n<span class="line"><span style="color:#24292E;">    observer.</span><span style="color:#6F42C1;">observe</span><span style="color:#24292E;">(img)</span></span>\n<span class="line"><span style="color:#24292E;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><code>IntersectionObserver</code>允许你追踪目标元素与其祖先元素或视窗的交叉状态</p><p>通过<code>isIntersecting</code>属性来判断是否出现</p><ul><li><code>observer.observe</code>添加交叉监听，给每个img添加监听</li><li><code>observer.unobserve</code>取消交叉监听，img出现时给src赋值，并取消监听</li></ul><h2 id="四、性能提升效果" tabindex="-1">四、性能提升效果 <a class="header-anchor" href="#四、性能提升效果" aria-label="Permalink to &quot;四、性能提升效果&quot;">​</a></h2><p>为了放大对比效果，特意选择了体积较大的图像文件</p><p>首先是没有懒加载时的加载时间：一共花了20.7s，五张图片一共19.4M</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/90e0d2415652405ea3a64af27a7a4c4e~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image" alt="image-20221103112657840"></p><p>使用懒加载后，首次只加载前三张图片，一共花了5.03s，三张图片8.4M</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7b9ddf17fbb84f61a38cc0482b1515ba~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image" alt="image-20221103120837216"></p>',62);const d=s(E,[["render",function(s,e,t,c,r,E){const d=n("ArticleMetadata"),b=n("ClientOnly");return a(),l("div",null,[y,p(b,null,{default:o((()=>[p(d)])),_:1}),i])}]]);export{r as __pageData,d as default};
