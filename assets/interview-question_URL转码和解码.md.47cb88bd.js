import{_ as a,C as s,o as n,c as l,H as o,w as p,k as e,a as t,Q as c}from"./chunks/framework.80346561.js";const r=JSON.parse('{"title":"URL 转码 和解码","description":"","frontmatter":{"createTime":"2022/10/11","tag":"js"},"headers":[],"relativePath":"interview-question/URL转码和解码.md","filePath":"s/前端面试题/js/URL转码和解码.md","lastUpdated":1696495218000}'),i={name:"interview-question/URL转码和解码.md"},d=e("h1",{id:"url-转码-和解码",tabindex:"-1"},[t("URL 转码 和解码 "),e("a",{class:"header-anchor",href:"#url-转码-和解码","aria-label":'Permalink to "URL 转码 和解码"'},"​")],-1),E=c('<h2 id="_1-escape-和-unescape" tabindex="-1">1. escape 和 unescape <a class="header-anchor" href="#_1-escape-和-unescape" aria-label="Permalink to &quot;1. escape 和 unescape&quot;">​</a></h2><ul><li>escape()不能直接用于URL编码，它的真正作用是返回一个字符的Unicode编码值。</li><li>采用unicode字符集对指定的字符串除0-255以外进行编码。所有的空格符、标点符号、特殊字符以及更多有联系非ASCII字符都将被转化成%xx格式的字符编码（xx等于该字符在字符集表里面的编码的16进制数字）。比如，空格符对应的编码是%20。</li></ul><h3 id="escape不编码字符有69个-0-9-a-z-a-z" tabindex="-1">escape不编码字符有69个：*，+，-，.，/，@，_，0-9，a-z，A-Z <a class="header-anchor" href="#escape不编码字符有69个-0-9-a-z-a-z" aria-label="Permalink to &quot;escape不编码字符有69个：*，+，-，.，/，@，_，0-9，a-z，A-Z&quot;">​</a></h3><ul><li>escape()函数用于js对字符串进行编码，不常用。</li></ul><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">　</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> url </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;http://localhost:8080/pro?a=1&amp;b=张三&amp;c=aaa&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">　　</span><span style="color:#B392F0;">escape</span><span style="color:#E1E4E8;">(url)  </span><span style="color:#F97583;">--&gt;</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">///   http%3A//localhost%3A8080/pro%3Fa%3D1%26b%3D%u5F20%u4E09%26c%3Daaa</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">　</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> url </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;http://localhost:8080/pro?a=1&amp;b=张三&amp;c=aaa&quot;</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">　　</span><span style="color:#6F42C1;">escape</span><span style="color:#24292E;">(url)  </span><span style="color:#D73A49;">--&gt;</span><span style="color:#24292E;">  </span><span style="color:#6A737D;">///   http%3A//localhost%3A8080/pro%3Fa%3D1%26b%3D%u5F20%u4E09%26c%3Daaa</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="_2-encodeuri-和-decodeuri" tabindex="-1">2. encodeURI 和 decodeURI <a class="header-anchor" href="#_2-encodeuri-和-decodeuri" aria-label="Permalink to &quot;2. encodeURI 和 decodeURI&quot;">​</a></h2><ul><li>把URI字符串采用UTF-8编码格式转化成escape各式的字符串。</li></ul><h3 id="encodeuri不编码字符有82个-0-9-a-z-a-z" tabindex="-1">encodeURI不编码字符有82个：!，#，$，&amp;，&#39;，(，)，*，+，,，-，.，/，:，;，=，?，@，_，~，0-9，a-z，A-Z <a class="header-anchor" href="#encodeuri不编码字符有82个-0-9-a-z-a-z" aria-label="Permalink to &quot;encodeURI不编码字符有82个：!，#，$，&amp;，&#39;，(，)，*，+，,，-，.，/，:，;，=，?，@，_，~，0-9，a-z，A-Z&quot;">​</a></h3><ul><li>encodeURI()用于整个url编码</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">　　</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> url </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;http://localhost:8080/pro?a=1&amp;b=张三&amp;c=aaa&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">　　</span><span style="color:#B392F0;">encodeURI</span><span style="color:#E1E4E8;">(url)  </span><span style="color:#F97583;">--&gt;</span><span style="color:#E1E4E8;">   </span><span style="color:#6A737D;">// &lt;http://localhost:8080/pro?a=1&amp;b=%E5%BC%A0%E4%B8%89&amp;c=aaa&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">　　</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> url </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;http://localhost:8080/pro?a=1&amp;b=张三&amp;c=aaa&quot;</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">　　</span><span style="color:#6F42C1;">encodeURI</span><span style="color:#24292E;">(url)  </span><span style="color:#D73A49;">--&gt;</span><span style="color:#24292E;">   </span><span style="color:#6A737D;">// &lt;http://localhost:8080/pro?a=1&amp;b=%E5%BC%A0%E4%B8%89&amp;c=aaa&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="_3-encodeuricomponent-和-decodeuricomponent" tabindex="-1">3. encodeURIComponent 和 decodeURIComponent <a class="header-anchor" href="#_3-encodeuricomponent-和-decodeuricomponent" aria-label="Permalink to &quot;3. encodeURIComponent 和 decodeURIComponent&quot;">​</a></h2><h3 id="与encodeuri-的区别是-它用于对url的组成部分进行个别编码-而不用于对整个url进行编码" tabindex="-1">与encodeURI()的区别是，它用于对URL的组成部分进行个别编码，而不用于对整个URL进行编码 <a class="header-anchor" href="#与encodeuri-的区别是-它用于对url的组成部分进行个别编码-而不用于对整个url进行编码" aria-label="Permalink to &quot;与encodeURI()的区别是，它用于对URL的组成部分进行个别编码，而不用于对整个URL进行编码&quot;">​</a></h3><p>因此，&quot;; / ? : @ &amp; = + $ , #&quot;，这些在encodeURI()中不被编码的符号，在encodeURIComponent()中统统会被编码。至于具体的编码方法，两者是一样。把URI字符串采用UTF-8编码格式转化成escape格式的字符串。 encodeURIComponent() 用于参数的传递，参数包含特殊字符可能会造成间断。</p><h3 id="例1" tabindex="-1">例1 <a class="header-anchor" href="#例1" aria-label="Permalink to &quot;例1&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">　　</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> url </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;http://localhost:8080/pro?a=1&amp;b=张三&amp;c=aaa&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">　　</span><span style="color:#B392F0;">encodeURIComponent</span><span style="color:#E1E4E8;">(url) </span><span style="color:#F97583;">--&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">/// http%3A%2F%2Flocalhost%3A8080%2Fpro%3Fa%3D1%26b%3D%E5%BC%A0%E4%B8%89%26c%3Daaa</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">　　</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> url </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;http://localhost:8080/pro?a=1&amp;b=张三&amp;c=aaa&quot;</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">　　</span><span style="color:#6F42C1;">encodeURIComponent</span><span style="color:#24292E;">(url) </span><span style="color:#D73A49;">--&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">/// http%3A%2F%2Flocalhost%3A8080%2Fpro%3Fa%3D1%26b%3D%E5%BC%A0%E4%B8%89%26c%3Daaa</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="例2" tabindex="-1">例2 <a class="header-anchor" href="#例2" aria-label="Permalink to &quot;例2&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">　</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> url </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&lt;http://localhost:8080/pp?a=1&amp;b&gt;=&quot;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> paramUrl,</span></span>\n<span class="line"><span style="color:#E1E4E8;">　　var paramUrl </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;http://localhost:8080/aa?a=1&amp;b=2&amp;c=3&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">　　</span><span style="color:#6A737D;">// 应该使用encodeURIComponent()进行转码　　</span></span>\n<span class="line"><span style="color:#E1E4E8;">　　</span><span style="color:#B392F0;">encodeURIComponent</span><span style="color:#E1E4E8;">(paramUrl) </span><span style="color:#F97583;">--&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">/// &lt;http://localhost:8080/pp?a=1&amp;b=http%3A%2F%2Flocalhost%3A8080%2Faa%3Fa%3D1%26b%3D2%23%26c%3D3&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"></span>\n<span class="line"><span style="color:#24292E;">　</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> url </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&lt;http://localhost:8080/pp?a=1&amp;b&gt;=&quot;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> paramUrl,</span></span>\n<span class="line"><span style="color:#24292E;">　　var paramUrl </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;http://localhost:8080/aa?a=1&amp;b=2&amp;c=3&quot;</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">　　</span><span style="color:#6A737D;">// 应该使用encodeURIComponent()进行转码　　</span></span>\n<span class="line"><span style="color:#24292E;">　　</span><span style="color:#6F42C1;">encodeURIComponent</span><span style="color:#24292E;">(paramUrl) </span><span style="color:#D73A49;">--&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">/// &lt;http://localhost:8080/pp?a=1&amp;b=http%3A%2F%2Flocalhost%3A8080%2Faa%3Fa%3D1%26b%3D2%23%26c%3D3&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',17);const u=a(i,[["render",function(a,e,t,c,r,i){const u=s("ArticleMetadata"),y=s("ClientOnly");return n(),l("div",null,[d,o(y,null,{default:p((()=>[o(u)])),_:1}),E])}]]);export{r as __pageData,u as default};
