import{_ as s,C as n,o as a,c as o,H as l,w as p,k as e,a as c,Q as r}from"./chunks/framework.e34e23c1.js";const t=JSON.parse('{"title":"别只会console.log了，试试这个","description":"console的多种用法","frontmatter":{"layout":"Article","title":"别只会console.log了，试试这个","head":[["meta",{"name":"description","content":"console的多种用法"}],["meta",{"name":"keywords","content":"console.time怎么用"}]],"date":"2023/10/25","tags":"JavaScript","category":"技术专栏","intro":"无论你是前端刚入门还是经验丰富的老鸟，debug调试都是日常编程中必备的技能。你可能在代码中已经习惯使用console.log()和debugger，但是我要说，前端真的只有这俩货，我还有一些其他的调试技巧，这些技巧可以使我们的调试过程更加高效和有趣。"},"headers":[],"relativePath":"article/别只会console.log了，试试这个.md","filePath":"全部文档/技术专栏/前端/别只会console.log了，试试这个.md","lastUpdated":1698219987000}'),i={name:"article/别只会console.log了，试试这个.md"},E=e("h1",{id:"不要只会用console-log了-试试这个",tabindex:"-1"},[c("不要只会用console.log了，试试这个 "),e("a",{class:"header-anchor",href:"#不要只会用console-log了-试试这个","aria-label":'Permalink to "不要只会用console.log了，试试这个"'},"​")],-1),y=r('<p>无论你是前端刚入门还是经验丰富的老鸟，debug调试都是日常编程中必备的技能。你可能在代码中已经习惯使用<code>console.log()</code>和<code>debugger</code>，但是我要说，前端真的不止这俩货能调试，我还有一些其他的调试技巧，这些技巧可以使我们的调试过程更加高效和有趣。</p><h3 id="console-log-的替代品" tabindex="-1"><code>console.log()</code> 的替代品 <a class="header-anchor" href="#console-log-的替代品" aria-label="Permalink to &quot;`console.log()` 的替代品&quot;">​</a></h3><h4 id="_1-console-warn-和-console-error" tabindex="-1">1. <code>console.warn()</code> 和 <code>console.error()</code> <a class="header-anchor" href="#_1-console-warn-和-console-error" aria-label="Permalink to &quot;1. `console.warn()` 和 `console.error()`&quot;">​</a></h4><p>当你的代码有很多log输出，会让控制台消息非常混乱，很难快速定位到有效输出。这时候可以尝试使用<code>console.warn()</code>和<code>console.error()</code>。这样控制台可以更清晰地识别警告和错误信息。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">warn</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;这是一个警告&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;这是一个错误&quot;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">warn</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;这是一个警告&quot;</span><span style="color:#24292E;">);</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">error</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;这是一个错误&quot;</span><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="_2-计时操作-console-time-和-console-timeend" tabindex="-1">2. 计时操作：<code>console.time()</code> 和 <code>console.timeEnd()</code> <a class="header-anchor" href="#_2-计时操作-console-time-和-console-timeend" aria-label="Permalink to &quot;2. 计时操作：`console.time()` 和 `console.timeEnd()`&quot;">​</a></h4><p>如果你想知道某段代码的执行时间，可以试下<code>console.time()</code>和<code>console.timeEnd()</code>。创建一个计时器，运行你想要测量的代码，然后停止计时并查看结果。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">time</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;循环计时器&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10000</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 在这里放置你的代码</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">timeEnd</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;循环计时器&quot;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">time</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;循环计时器&quot;</span><span style="color:#24292E;">);</span></span>\n<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10000</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 在这里放置你的代码</span></span>\n<span class="line"><span style="color:#24292E;">}</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">timeEnd</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;循环计时器&quot;</span><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>控制台打印：</p><p><img src="https://cdn.geekbuluo.com/blog/20231025/331892.png" alt=""></p><p>这对于那些需要较长执行时间的CPU密集型应用程序非常有用，比如神经网络或HTML Canvas的操作。</p><h4 id="_3-跟踪代码调用链-console-trace" tabindex="-1">3. 跟踪代码调用链：<code>console.trace()</code> <a class="header-anchor" href="#_3-跟踪代码调用链-console-trace" aria-label="Permalink to &quot;3. 跟踪代码调用链：`console.trace()`&quot;">​</a></h4><p>如果你想弄清楚一个函数是如何被调用的，可以使用<code>console.trace()</code>。这个方法将显示函数的调用链，帮助你理解代码执行的路径。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">trace</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">trace</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">randomFunction</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">trace</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#B392F0;">randomFunction</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">trace</span><span style="color:#24292E;">() {</span></span>\n<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">trace</span><span style="color:#24292E;">();</span></span>\n<span class="line"><span style="color:#24292E;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">randomFunction</span><span style="color:#24292E;">() {</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">trace</span><span style="color:#24292E;">();</span></span>\n<span class="line"><span style="color:#24292E;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6F42C1;">randomFunction</span><span style="color:#24292E;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>控制台打印：</p><p><img src="https://cdn.geekbuluo.com/blog/20231025/82b433.png" alt=""></p><h3 id="整理控制台消息" tabindex="-1">整理控制台消息 <a class="header-anchor" href="#整理控制台消息" aria-label="Permalink to &quot;整理控制台消息&quot;">​</a></h3><p>控制台中的消息有时会让人眼花缭乱，这使得调试变得更加复杂。你可以使用分组控制台消息来提高可读性。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;消息1&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">group</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;我的消息组&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;消息2&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;消息3&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">groupEnd</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;消息1&quot;</span><span style="color:#24292E;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">group</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;我的消息组&quot;</span><span style="color:#24292E;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;消息2&quot;</span><span style="color:#24292E;">);</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;消息3&quot;</span><span style="color:#24292E;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">groupEnd</span><span style="color:#24292E;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><img src="https://cdn.geekbuluo.com/blog/20231025/09a33b.png" alt=""></p><h3 id="清空控制台" tabindex="-1">清空控制台 <a class="header-anchor" href="#清空控制台" aria-label="Permalink to &quot;清空控制台&quot;">​</a></h3><p>当控制台充满了大量消息时，使用<code>console.clear()</code>可以让控制台一片清爽，有助于更清晰地进行调试。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">clear</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">clear</span><span style="color:#24292E;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="数据可视化-使用表格" tabindex="-1">数据可视化：使用表格 <a class="header-anchor" href="#数据可视化-使用表格" aria-label="Permalink to &quot;数据可视化：使用表格&quot;">​</a></h3><p>在某些情况下，你可能需要以更可视化的方式呈现数据，而不仅是文本输出。<code>console.table()</code>可以帮助你以表格的形式显示数据，使其更容易理解。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">person1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { name: </span><span style="color:#9ECBFF;">&quot;Weirdo&quot;</span><span style="color:#E1E4E8;">, age: </span><span style="color:#9ECBFF;">&quot;-23&quot;</span><span style="color:#E1E4E8;">, hobby: </span><span style="color:#9ECBFF;">&quot;singing&quot;</span><span style="color:#E1E4E8;"> };</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">person2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { name: </span><span style="color:#9ECBFF;">&quot;SomeName&quot;</span><span style="color:#E1E4E8;">, age: </span><span style="color:#9ECBFF;">&quot;Infinity&quot;</span><span style="color:#E1E4E8;">, hobby: </span><span style="color:#9ECBFF;">&quot;programming&quot;</span><span style="color:#E1E4E8;"> };</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">table</span><span style="color:#E1E4E8;">({ person1, person2 });</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">person1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { name: </span><span style="color:#032F62;">&quot;Weirdo&quot;</span><span style="color:#24292E;">, age: </span><span style="color:#032F62;">&quot;-23&quot;</span><span style="color:#24292E;">, hobby: </span><span style="color:#032F62;">&quot;singing&quot;</span><span style="color:#24292E;"> };</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">person2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { name: </span><span style="color:#032F62;">&quot;SomeName&quot;</span><span style="color:#24292E;">, age: </span><span style="color:#032F62;">&quot;Infinity&quot;</span><span style="color:#24292E;">, hobby: </span><span style="color:#032F62;">&quot;programming&quot;</span><span style="color:#24292E;"> };</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">table</span><span style="color:#24292E;">({ person1, person2 });</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>控制台打印：</p><p><img src="https://cdn.geekbuluo.com/blog/20231025/7de95e.png" alt=""></p><h3 id="控制台中的css" tabindex="-1">控制台中的CSS？ <a class="header-anchor" href="#控制台中的css" aria-label="Permalink to &quot;控制台中的CSS？&quot;">​</a></h3><p>没错，你甚至可以在控制台中应用CSS样式，让你的控制台消息看起来更漂亮和有吸引力。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;%c HelloWrold！&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;color: red; background-color: lightblue; border: solid&quot;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;%c HelloWrold！&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;color: red; background-color: lightblue; border: solid&quot;</span><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>控制台打印：</p><p><img src="https://cdn.geekbuluo.com/blog/20231025/e1c401.png" alt=""></p><p>本文旨在向你展示更高级的JavaScript调试技巧，让你的调试过程更加有趣和高效。</p>',34);const d=s(i,[["render",function(s,e,c,r,t,i){const d=n("ArticleMetadata"),u=n("ClientOnly");return a(),o("div",null,[E,l(u,null,{default:p((()=>[l(d)])),_:1}),y])}]]);export{t as __pageData,d as default};
