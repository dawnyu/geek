import{_ as s,C as n,o as a,c as l,H as p,w as o,k as e,a as c,Q as r}from"./chunks/framework.bc643b65.js";const t=JSON.parse('{"title":"需要了解的nodejs知识（工具模块）","description":"","frontmatter":{"createTime":"2022/11/09","tag":"工程化,Node"},"headers":[],"relativePath":"interview-question/前端需要了解的nodejs.md","filePath":"s/前端面试题/node/前端需要了解的nodejs.md","lastUpdated":1696495218000}'),E={name:"interview-question/前端需要了解的nodejs.md"},y=e("h1",{id:"需要了解的nodejs知识-工具模块",tabindex:"-1"},[c("需要了解的nodejs知识（工具模块） "),e("a",{class:"header-anchor",href:"#需要了解的nodejs知识-工具模块","aria-label":'Permalink to "需要了解的nodejs知识（工具模块）"'},"​")],-1),i=r('<h2 id="util" tabindex="-1">Util <a class="header-anchor" href="#util" aria-label="Permalink to &quot;Util&quot;">​</a></h2><p>Node.js 的工具模块</p><h3 id="常用的判断属性-在util-types对象" tabindex="-1">常用的判断属性，在util.types对象 <a class="header-anchor" href="#常用的判断属性-在util-types对象" aria-label="Permalink to &quot;常用的判断属性，在util.types对象&quot;">​</a></h3><ul><li>isDate：判断是否是日期格式的变量</li><li>isAnyArrayBuffer：判断是否是buffer</li><li>isAsyncFunction：判断函数是否是异步的</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> util </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;util&#39;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">// types: 判断变量/函数的一些类型</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> {</span><span style="color:#79B8FF;">isAnyArrayBuffer</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">isAsyncFunction</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">isDate</span><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> util.types</span></span>\n<span class="line"><span style="color:#6A737D;">// isDate</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">is_date</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isDate</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Date</span><span style="color:#E1E4E8;">())</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">is_date2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isDate</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;2022-09-01&#39;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;is_date2: &#39;</span><span style="color:#E1E4E8;">, is_date2);</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;is_date: &#39;</span><span style="color:#E1E4E8;">, is_date);</span></span>\n<span class="line"><span style="color:#6A737D;">// isAnyArrayBuffer</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">isBuff1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isAnyArrayBuffer</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;buffer&#39;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;isBuff1: &#39;</span><span style="color:#E1E4E8;">, isBuff1);</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">isBuff2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isAnyArrayBuffer</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ArrayBuffer</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">14</span><span style="color:#E1E4E8;">))</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;isBuff2: &#39;</span><span style="color:#E1E4E8;">, isBuff2);</span></span>\n<span class="line"><span style="color:#6A737D;">// isAsyncFunction</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">f2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">function2</span><span style="color:#E1E4E8;">(){} </span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">f1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">function1</span><span style="color:#E1E4E8;">(){} </span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">isAsyncFunc</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isAsyncFunction</span><span style="color:#E1E4E8;">(f1)</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">isAsyncFunc2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isAsyncFunction</span><span style="color:#E1E4E8;">(f2)</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;isAsyncFunc2: &#39;</span><span style="color:#E1E4E8;">, isAsyncFunc2);</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;isAsyncFunc: &#39;</span><span style="color:#E1E4E8;">, isAsyncFunc);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> util </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;util&#39;</span><span style="color:#24292E;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">// types: 判断变量/函数的一些类型</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">isAnyArrayBuffer</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">isAsyncFunction</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">isDate</span><span style="color:#24292E;">} </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> util.types</span></span>\n<span class="line"><span style="color:#6A737D;">// isDate</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">is_date</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isDate</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">())</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">is_date2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isDate</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;2022-09-01&#39;</span><span style="color:#24292E;">)</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;is_date2: &#39;</span><span style="color:#24292E;">, is_date2);</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;is_date: &#39;</span><span style="color:#24292E;">, is_date);</span></span>\n<span class="line"><span style="color:#6A737D;">// isAnyArrayBuffer</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">isBuff1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isAnyArrayBuffer</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;buffer&#39;</span><span style="color:#24292E;">)</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;isBuff1: &#39;</span><span style="color:#24292E;">, isBuff1);</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">isBuff2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isAnyArrayBuffer</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ArrayBuffer</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">14</span><span style="color:#24292E;">))</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;isBuff2: &#39;</span><span style="color:#24292E;">, isBuff2);</span></span>\n<span class="line"><span style="color:#6A737D;">// isAsyncFunction</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">f2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">function2</span><span style="color:#24292E;">(){} </span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">f1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">function1</span><span style="color:#24292E;">(){} </span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">isAsyncFunc</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isAsyncFunction</span><span style="color:#24292E;">(f1)</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">isAsyncFunc2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isAsyncFunction</span><span style="color:#24292E;">(f2)</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;isAsyncFunc2: &#39;</span><span style="color:#24292E;">, isAsyncFunc2);</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;isAsyncFunc: &#39;</span><span style="color:#24292E;">, isAsyncFunc);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h3 id="常用的方法和属性" tabindex="-1">常用的方法和属性 <a class="header-anchor" href="#常用的方法和属性" aria-label="Permalink to &quot;常用的方法和属性&quot;">​</a></h3><ul><li>format:格式化字符串</li><li>inspect: 将对象转为字符串</li><li>isDeepStrictEqual：判断两个字符是否强相等，相当于===</li><li>deprecate：将函数包装为弃用</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// inspect</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">obj</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {name:</span><span style="color:#9ECBFF;">&#39;inspect&#39;</span><span style="color:#E1E4E8;">,date:</span><span style="color:#9ECBFF;">&#39;2022-09-01&#39;</span><span style="color:#E1E4E8;">}</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> util.</span><span style="color:#B392F0;">inspect</span><span style="color:#E1E4E8;">(obj)</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;str: &#39;</span><span style="color:#E1E4E8;">, str);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">// 格式化字符串util.format(arg1,arg2,arg3,arg4)</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">str2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> util.</span><span style="color:#B392F0;">format</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;%s:%s&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;12&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;34&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;56&#39;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;str2: &#39;</span><span style="color:#E1E4E8;">, str2);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">// deprecate</span></span>\n<span class="line"><span style="color:#E1E4E8;">util.</span><span style="color:#B392F0;">deprecate</span><span style="color:#E1E4E8;">(()</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;">{</span></span>\n<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;this is a deprecate func&#39;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">})</span></span>\n<span class="line"><span style="color:#6A737D;">// isDeepStrictEqual </span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">v1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;2&#39;</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">v2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">isEqual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> util.</span><span style="color:#B392F0;">isDeepStrictEqual</span><span style="color:#E1E4E8;">(v1,v2)</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;isEqual: &#39;</span><span style="color:#E1E4E8;">, isEqual);</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(v1 </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> v2);</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(v1 </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> v2);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// inspect</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">obj</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {name:</span><span style="color:#032F62;">&#39;inspect&#39;</span><span style="color:#24292E;">,date:</span><span style="color:#032F62;">&#39;2022-09-01&#39;</span><span style="color:#24292E;">}</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">str</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> util.</span><span style="color:#6F42C1;">inspect</span><span style="color:#24292E;">(obj)</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;str: &#39;</span><span style="color:#24292E;">, str);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">// 格式化字符串util.format(arg1,arg2,arg3,arg4)</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">str2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> util.</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;%s:%s&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;12&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;34&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;56&#39;</span><span style="color:#24292E;">)</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;str2: &#39;</span><span style="color:#24292E;">, str2);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">// deprecate</span></span>\n<span class="line"><span style="color:#24292E;">util.</span><span style="color:#6F42C1;">deprecate</span><span style="color:#24292E;">(()</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">{</span></span>\n<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;this is a deprecate func&#39;</span><span style="color:#24292E;">)</span></span>\n<span class="line"><span style="color:#24292E;">})</span></span>\n<span class="line"><span style="color:#6A737D;">// isDeepStrictEqual </span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">v1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;2&#39;</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">v2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">isEqual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> util.</span><span style="color:#6F42C1;">isDeepStrictEqual</span><span style="color:#24292E;">(v1,v2)</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;isEqual: &#39;</span><span style="color:#24292E;">, isEqual);</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(v1 </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> v2);</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(v1 </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> v2);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="dns" tabindex="-1">DNS <a class="header-anchor" href="#dns" aria-label="Permalink to &quot;DNS&quot;">​</a></h2><p>Node.js DNS 模块用于解析域名</p><ul><li>DNS(Domain Name System): 域名系统、 <ul><li>组成：他是由解析器和域名服务器组成</li><li>作用：域名解析，将域名转换成IP地址，将IP地址转换成域名列表</li></ul></li><li>nodejs中DNS支持域名和对应IP地址的相互解析，主要代码如下：</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> dns </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;dns&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">//lookup（底层系统工具进行）：将域名（比如 &#39;runoob.com&#39;）解析为第一条找到的记录 A （IPV4）或 AAAA(IPV6)。</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">hostname</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;www.runoob.com&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">dns.</span><span style="color:#B392F0;">lookup</span><span style="color:#E1E4E8;">(hostname, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">err</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">address</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">famliy</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">err) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(hostname </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;绑定的IP地址为：&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> address);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">});</span></span>\n<span class="line"><span style="color:#6A737D;">//lookupService：实现给定的ip地址和端口号，解析为对应的域名</span></span>\n<span class="line"><span style="color:#E1E4E8;">dns.</span><span style="color:#B392F0;">lookupService</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;104.20.23.46&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">80</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">err</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">hostname</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">service</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (err) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(err);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;主机：&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> hostname);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;协议：&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> service);</span></span>\n<span class="line"><span style="color:#E1E4E8;">});</span></span>\n<span class="line"><span style="color:#6A737D;">//resolve：使用网络域名系统</span></span>\n<span class="line"><span style="color:#E1E4E8;">dns.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;nodejs.org&quot;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">err</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">address</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (err) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;resolve address: &#39;</span><span style="color:#E1E4E8;">, address);</span></span>\n<span class="line"><span style="color:#E1E4E8;">});</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">// reverse：反向解析 IP 地址，指向该 IP 地址的域名数组。</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ip</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;192.30.252.130&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">dns.</span><span style="color:#B392F0;">reverse</span><span style="color:#E1E4E8;">(ip, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">err</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">hostnames</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">err) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(ip </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;IP绑定的语言数组为：&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> hostnames);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(err);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">});</span></span>\n<span class="line"><span style="color:#6A737D;">// 返回当前正在使用的ip地址</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">servers</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> dns.</span><span style="color:#B392F0;">getServers</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;current server ip address: &quot;</span><span style="color:#E1E4E8;">, servers);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> dns </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;dns&quot;</span><span style="color:#24292E;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">//lookup（底层系统工具进行）：将域名（比如 &#39;runoob.com&#39;）解析为第一条找到的记录 A （IPV4）或 AAAA(IPV6)。</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">hostname</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;www.runoob.com&quot;</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">dns.</span><span style="color:#6F42C1;">lookup</span><span style="color:#24292E;">(hostname, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">err</span><span style="color:#24292E;">, </span><span style="color:#E36209;">address</span><span style="color:#24292E;">, </span><span style="color:#E36209;">famliy</span><span style="color:#24292E;">) {</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">err) {</span></span>\n<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(hostname </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;绑定的IP地址为：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> address);</span></span>\n<span class="line"><span style="color:#24292E;">  }</span></span>\n<span class="line"><span style="color:#24292E;">});</span></span>\n<span class="line"><span style="color:#6A737D;">//lookupService：实现给定的ip地址和端口号，解析为对应的域名</span></span>\n<span class="line"><span style="color:#24292E;">dns.</span><span style="color:#6F42C1;">lookupService</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;104.20.23.46&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">80</span><span style="color:#24292E;">, (</span><span style="color:#E36209;">err</span><span style="color:#24292E;">, </span><span style="color:#E36209;">hostname</span><span style="color:#24292E;">, </span><span style="color:#E36209;">service</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (err) {</span></span>\n<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(err);</span></span>\n<span class="line"><span style="color:#24292E;">  }</span></span>\n<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;主机：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> hostname);</span></span>\n<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;协议：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> service);</span></span>\n<span class="line"><span style="color:#24292E;">});</span></span>\n<span class="line"><span style="color:#6A737D;">//resolve：使用网络域名系统</span></span>\n<span class="line"><span style="color:#24292E;">dns.</span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;nodejs.org&quot;</span><span style="color:#24292E;">, (</span><span style="color:#E36209;">err</span><span style="color:#24292E;">, </span><span style="color:#E36209;">address</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (err) {</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">  }</span></span>\n<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;resolve address: &#39;</span><span style="color:#24292E;">, address);</span></span>\n<span class="line"><span style="color:#24292E;">});</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">// reverse：反向解析 IP 地址，指向该 IP 地址的域名数组。</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ip</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;192.30.252.130&quot;</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">dns.</span><span style="color:#6F42C1;">reverse</span><span style="color:#24292E;">(ip, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">err</span><span style="color:#24292E;">, </span><span style="color:#E36209;">hostnames</span><span style="color:#24292E;">) {</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">err) {</span></span>\n<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(ip </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;IP绑定的语言数组为：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> hostnames);</span></span>\n<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>\n<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(err);</span></span>\n<span class="line"><span style="color:#24292E;">  }</span></span>\n<span class="line"><span style="color:#24292E;">});</span></span>\n<span class="line"><span style="color:#6A737D;">// 返回当前正在使用的ip地址</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">servers</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> dns.</span><span style="color:#6F42C1;">getServers</span><span style="color:#24292E;">();</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;current server ip address: &quot;</span><span style="color:#24292E;">, servers);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><h2 id="os" tabindex="-1">OS <a class="header-anchor" href="#os" aria-label="Permalink to &quot;OS&quot;">​</a></h2><p>Node.js OS 模块提供了一些基本系统操作函数</p><h3 id="常用的方法和属性-1" tabindex="-1">常用的方法和属性 <a class="header-anchor" href="#常用的方法和属性-1" aria-label="Permalink to &quot;常用的方法和属性&quot;">​</a></h3><ul><li>networkInterfaces获取网络信息</li><li>cpus：获取系统的CPU内核细腻，返回个数组</li><li>totalmem：系统总共内存容量</li><li>freemem：系统空余内存变量</li><li>hostname：系统主机名</li><li>version: 系统内核版本的字符串</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">os</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;os&#39;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;系统所有内存变量为（单位M）：&#39;</span><span style="color:#E1E4E8;">,os.</span><span style="color:#B392F0;">totalmem</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">/</span><span style="color:#79B8FF;">1024</span><span style="color:#F97583;">/</span><span style="color:#79B8FF;">1024</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;系统空余内存变量为（单位M）：&#39;</span><span style="color:#E1E4E8;">,os.</span><span style="color:#B392F0;">freemem</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">/</span><span style="color:#79B8FF;">1024</span><span style="color:#F97583;">/</span><span style="color:#79B8FF;">1024</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;系统主机名：&#39;</span><span style="color:#E1E4E8;">,os.</span><span style="color:#B392F0;">hostname</span><span style="color:#E1E4E8;">());</span></span>\n<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;系统主机内核版本：&#39;</span><span style="color:#E1E4E8;">,os.</span><span style="color:#B392F0;">version</span><span style="color:#E1E4E8;">());</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">os</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;os&#39;</span><span style="color:#24292E;">);</span></span>\n<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;系统所有内存变量为（单位M）：&#39;</span><span style="color:#24292E;">,os.</span><span style="color:#6F42C1;">totalmem</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">1024</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">1024</span><span style="color:#24292E;">);</span></span>\n<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;系统空余内存变量为（单位M）：&#39;</span><span style="color:#24292E;">,os.</span><span style="color:#6F42C1;">freemem</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">1024</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">1024</span><span style="color:#24292E;">);</span></span>\n<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;系统主机名：&#39;</span><span style="color:#24292E;">,os.</span><span style="color:#6F42C1;">hostname</span><span style="color:#24292E;">());</span></span>\n<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;系统主机内核版本：&#39;</span><span style="color:#24292E;">,os.</span><span style="color:#6F42C1;">version</span><span style="color:#24292E;">());</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>platform: 主机操作系统平摊</li><li>type: 主机的操作系统平台名称,可能的值为&#39;aix&#39;、&#39;darwin&#39;、&#39;freebsd&#39;、&#39;linux&#39;、&#39;openbsd&#39;、&#39;sunos&#39;、以及 &#39;win32&#39;。</li><li>uptime: 操作系统正常运行时间</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;主机的平台：&#39;</span><span style="color:#E1E4E8;">,os.</span><span style="color:#B392F0;">platform</span><span style="color:#E1E4E8;">());</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;主机的平台名称：&#39;</span><span style="color:#E1E4E8;">,os.</span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">());</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;主机的x正常运行时间：&#39;</span><span style="color:#E1E4E8;">,os.</span><span style="color:#B392F0;">uptime</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">/</span><span style="color:#79B8FF;">3600</span><span style="color:#F97583;">/</span><span style="color:#79B8FF;">24</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;主机的平台：&#39;</span><span style="color:#24292E;">,os.</span><span style="color:#6F42C1;">platform</span><span style="color:#24292E;">());</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;主机的平台名称：&#39;</span><span style="color:#24292E;">,os.</span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">());</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;主机的x正常运行时间：&#39;</span><span style="color:#24292E;">,os.</span><span style="color:#6F42C1;">uptime</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">3600</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">24</span><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="path" tabindex="-1">Path <a class="header-anchor" href="#path" aria-label="Permalink to &quot;Path&quot;">​</a></h2><p>nodejs用来处理文件路径的工具模块，主要处理绝对路径，相对路径</p><h3 id="常用的方法和属性-2" tabindex="-1">常用的方法和属性 <a class="header-anchor" href="#常用的方法和属性-2" aria-label="Permalink to &quot;常用的方法和属性&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;path&#39;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">//属性- 平台路径的分隔符</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">sep</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">path.sep;</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;sep: &#39;</span><span style="color:#E1E4E8;">, sep);</span></span>\n<span class="line"><span style="color:#6A737D;">//属性- 分隔符获取</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">delimiter</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> path.delimiter;</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;delimiter: &#39;</span><span style="color:#E1E4E8;">, delimiter);</span></span>\n<span class="line"><span style="color:#6A737D;">//属性- 提供上述 path 的方法，不过总是以 win32 兼容的方式交互。</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">win32</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> path.win32;</span></span>\n<span class="line"><span style="color:#6A737D;">// console.log(&#39;win32: &#39;, win32);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">// resolve参数解析为绝对路径</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">r1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> path.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(__dirname,</span><span style="color:#9ECBFF;">&#39;../&#39;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;r1: &#39;</span><span style="color:#E1E4E8;">, r1);</span></span>\n<span class="line"><span style="color:#6A737D;">// join参数拼接为一个路径</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">j1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> path.</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(r1,</span><span style="color:#9ECBFF;">&#39;http/app.js&#39;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;j1: &#39;</span><span style="color:#E1E4E8;">, j1);</span></span>\n<span class="line"><span style="color:#6A737D;">// path.relative(from, to)用于将绝对路径转为相对路径，返回从 from 到 to 的相对路径（基于当前工作目录）</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">r2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> path.</span><span style="color:#B392F0;">relative</span><span style="color:#E1E4E8;">(j1,</span><span style="color:#9ECBFF;">&#39;http/app.js&#39;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;rl: &#39;</span><span style="color:#E1E4E8;">, r2);</span></span>\n<span class="line"><span style="color:#6A737D;">// isAbsolute判断是否是绝对路径</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">isAbs1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> path.</span><span style="color:#B392F0;">isAbsolute</span><span style="color:#E1E4E8;">(r2)</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;isAbs1: &#39;</span><span style="color:#E1E4E8;">, isAbs1);</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">isAbs2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> path.</span><span style="color:#B392F0;">isAbsolute</span><span style="color:#E1E4E8;">(j1)</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;isAbs2: &#39;</span><span style="color:#E1E4E8;">, isAbs2);</span></span>\n<span class="line"><span style="color:#6A737D;">// path.dirname(p):返回路径中代表文件夹的部分，同 Unix 的dirname 命令类似。</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">dir</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> path.</span><span style="color:#B392F0;">dirname</span><span style="color:#E1E4E8;">(j1)</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;dir: &#39;</span><span style="color:#E1E4E8;">, dir);</span></span>\n<span class="line"><span style="color:#6A737D;">// path.basename：返回路径中的最后一部分。同 Unix 命令 bashname 类似。</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">basename</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> path.</span><span style="color:#B392F0;">basename</span><span style="color:#E1E4E8;">(j1)</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;basename: &#39;</span><span style="color:#E1E4E8;">, basename);</span></span>\n<span class="line"><span style="color:#6A737D;">// path.extname(p): 返回路径中文件的后缀名，即路径中最后一个&#39;.&#39;之后(包含&#39;.&#39;)的部分。如果一个路径中并不包含&#39;.&#39;或该路径只包含一个&#39;.&#39; 且这个&#39;.&#39;为路径的第一个字符，则此命令返回空字符串。</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">extname</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> path.</span><span style="color:#B392F0;">extname</span><span style="color:#E1E4E8;">(j1);</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;extname: &#39;</span><span style="color:#E1E4E8;">, extname);</span></span>\n<span class="line"><span style="color:#6A737D;">// path.parse(pathString):返回路径字符串的对象,与path.format相反。</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">pathObj</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> path.</span><span style="color:#B392F0;">parse</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;D:</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">demo</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">demo</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">nodejs</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">http</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">app.js&#39;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;pathObj: &#39;</span><span style="color:#E1E4E8;">, pathObj);</span></span>\n<span class="line"><span style="color:#6A737D;">// path.format(pathObject):从对象中返回路径字符串，和 path.parse 相反。</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">pathStr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> path.</span><span style="color:#B392F0;">format</span><span style="color:#E1E4E8;">(pathObj)</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;pathStr: &#39;</span><span style="color:#E1E4E8;">, pathStr);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">path</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;path&#39;</span><span style="color:#24292E;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">//属性- 平台路径的分隔符</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">sep</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;">path.sep;</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;sep: &#39;</span><span style="color:#24292E;">, sep);</span></span>\n<span class="line"><span style="color:#6A737D;">//属性- 分隔符获取</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">delimiter</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> path.delimiter;</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;delimiter: &#39;</span><span style="color:#24292E;">, delimiter);</span></span>\n<span class="line"><span style="color:#6A737D;">//属性- 提供上述 path 的方法，不过总是以 win32 兼容的方式交互。</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">win32</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> path.win32;</span></span>\n<span class="line"><span style="color:#6A737D;">// console.log(&#39;win32: &#39;, win32);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">// resolve参数解析为绝对路径</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">r1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> path.</span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(__dirname,</span><span style="color:#032F62;">&#39;../&#39;</span><span style="color:#24292E;">);</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;r1: &#39;</span><span style="color:#24292E;">, r1);</span></span>\n<span class="line"><span style="color:#6A737D;">// join参数拼接为一个路径</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">j1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> path.</span><span style="color:#6F42C1;">join</span><span style="color:#24292E;">(r1,</span><span style="color:#032F62;">&#39;http/app.js&#39;</span><span style="color:#24292E;">)</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;j1: &#39;</span><span style="color:#24292E;">, j1);</span></span>\n<span class="line"><span style="color:#6A737D;">// path.relative(from, to)用于将绝对路径转为相对路径，返回从 from 到 to 的相对路径（基于当前工作目录）</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">r2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> path.</span><span style="color:#6F42C1;">relative</span><span style="color:#24292E;">(j1,</span><span style="color:#032F62;">&#39;http/app.js&#39;</span><span style="color:#24292E;">)</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;rl: &#39;</span><span style="color:#24292E;">, r2);</span></span>\n<span class="line"><span style="color:#6A737D;">// isAbsolute判断是否是绝对路径</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">isAbs1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> path.</span><span style="color:#6F42C1;">isAbsolute</span><span style="color:#24292E;">(r2)</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;isAbs1: &#39;</span><span style="color:#24292E;">, isAbs1);</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">isAbs2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> path.</span><span style="color:#6F42C1;">isAbsolute</span><span style="color:#24292E;">(j1)</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;isAbs2: &#39;</span><span style="color:#24292E;">, isAbs2);</span></span>\n<span class="line"><span style="color:#6A737D;">// path.dirname(p):返回路径中代表文件夹的部分，同 Unix 的dirname 命令类似。</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">dir</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> path.</span><span style="color:#6F42C1;">dirname</span><span style="color:#24292E;">(j1)</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;dir: &#39;</span><span style="color:#24292E;">, dir);</span></span>\n<span class="line"><span style="color:#6A737D;">// path.basename：返回路径中的最后一部分。同 Unix 命令 bashname 类似。</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">basename</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> path.</span><span style="color:#6F42C1;">basename</span><span style="color:#24292E;">(j1)</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;basename: &#39;</span><span style="color:#24292E;">, basename);</span></span>\n<span class="line"><span style="color:#6A737D;">// path.extname(p): 返回路径中文件的后缀名，即路径中最后一个&#39;.&#39;之后(包含&#39;.&#39;)的部分。如果一个路径中并不包含&#39;.&#39;或该路径只包含一个&#39;.&#39; 且这个&#39;.&#39;为路径的第一个字符，则此命令返回空字符串。</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">extname</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> path.</span><span style="color:#6F42C1;">extname</span><span style="color:#24292E;">(j1);</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;extname: &#39;</span><span style="color:#24292E;">, extname);</span></span>\n<span class="line"><span style="color:#6A737D;">// path.parse(pathString):返回路径字符串的对象,与path.format相反。</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">pathObj</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> path.</span><span style="color:#6F42C1;">parse</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;D:</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">demo</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">demo</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">nodejs</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">http</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">app.js&#39;</span><span style="color:#24292E;">)</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;pathObj: &#39;</span><span style="color:#24292E;">, pathObj);</span></span>\n<span class="line"><span style="color:#6A737D;">// path.format(pathObject):从对象中返回路径字符串，和 path.parse 相反。</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">pathStr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> path.</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">(pathObj)</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;pathStr: &#39;</span><span style="color:#24292E;">, pathStr);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div>',23);const F=s(E,[["render",function(s,e,c,r,t,E){const F=n("ArticleMetadata"),u=n("ClientOnly");return a(),l("div",null,[y,p(u,null,{default:o((()=>[p(F)])),_:1}),i])}]]);export{t as __pageData,F as default};
