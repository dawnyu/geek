import{_ as p,C as S,o as e,c as a,H as t,w as i,k as n,a as r,Q as o}from"./chunks/framework.e34e23c1.js";const s=JSON.parse('{"title":"CSS新世界 pdf下载","description":"CSS新世界pdf免费下载","frontmatter":{"layout":"Article","title":"CSS新世界 pdf下载","head":[["meta",{"name":"description","content":"CSS新世界pdf免费下载"}],["meta",{"name":"keywords","content":"CSS新世界下载地址,CSS新世界pdf下载"}]],"date":"2023/10/09","tags":"CSS电子书","category":"学习资源","preview":"/book/cssxinshijie.png","intro":"《CSS新世界》是“CSS世界三部曲”的最后一部。这是一本关于CSS的进阶读物，专门讲CSS3及其之后版本的新特性。在《CSS新世界》中，作者结合自己多年的从业经验，讲解CSS基础知识，并充分考虑前端开发者的需求，以CSS新特性的历史背景为线索，去粗取精，注重细节，深入浅出地介绍了上百个CSS新特性。此外，作者专门还为《CSS新世界》开发了配套网站，用于书中实例效果的在线展示和问题答疑。"},"headers":[],"relativePath":"article/CSS新世界.md","filePath":"全部文档/书籍推荐/前端/htmlcss/CSS新世界.md","lastUpdated":1697783789000}'),C={name:"article/CSS新世界.md"},l=n("h1",{id:"css新世界-pdf下载",tabindex:"-1"},[r("CSS新世界 pdf下载 "),n("a",{class:"header-anchor",href:"#css新世界-pdf下载","aria-label":'Permalink to "CSS新世界 pdf下载"'},"​")],-1),d=n("h2",{id:"预览",tabindex:"-1"},[r("预览 "),n("a",{class:"header-anchor",href:"#预览","aria-label":'Permalink to "预览"'},"​")],-1),c=o('<h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>《CSS新世界》是“CSS世界三部曲”的最后一部。这是一本关于CSS的进阶读物，专门讲CSS3及其之后版本的新特性。在《CSS新世界》中，作者结合自己多年的从业经验，讲解CSS基础知识，并充分考虑前端开发者的需求，以CSS新特性的历史背景为线索，去粗取精，注重细节，深入浅出地介绍了上百个CSS新特性。此外，作者专门还为《CSS新世界》开发了配套网站，用于书中实例效果的在线展示和问题答疑。</p><p>《CSS新世界》的所有内容都是作者经过深入思考和探索后提炼出来的，知识点多且内容丰富，注重技术细节、经验分享和解决问题的思路。《CSS新世界》的主要目标是帮助前端开发者突破CSS技能提升的瓶颈，非常适合具有一定CSS基础的前端开发者阅读。</p><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><p>第1章 概述</p><p>1.1 CSS3出现的历史和背景</p><p>1.2 模块化的CSS新世界</p><p>第2章 需要提前了解的知识</p><p>2.1 互通互联的CSS数据类型</p><p>2.1.1 为什么要关注CSS数据类型</p><p>2.1.2 几个常见数据类型的简单介绍</p><p>2.2 学会看懂CSS属性值定义语法</p><p>2.2.1 学习CSS属性值定义语法的好处</p><p>2.2.2 CSS属性值定义语法详解</p><p>2.3 了解CSS全局关键字属性值</p><p>2.3.1 用过都说好的继承关键字inherit</p><p>2.3.2 可以一用的初始值关键字initial</p><p>2.3.3 了解一下不固定值关键字unset</p><p>2.3.4 我个人很喜欢的恢复关键字revert</p><p>2.4 指代所有CSS属性的all属性</p><p>2.5 CSS新特性的渐进增强处理技巧</p><p>2.5.1 直接使用CSS新特性</p><p>2.5.2 利用属性值的语法差异实现兼容</p><p>2.5.3 借助伪类或伪元素区分浏览器的技巧</p><p>2.5.4 @supports规则下的渐进增强处理</p><p>2.5.5 对CSS新特性渐进增强处理的总结</p><p>第3章 从增强已有的CSS属性开始</p><p>3.1 贯穿全书的尺寸体系</p><p>3.1.1 从width:fit-content声明开始</p><p>3.1.2 stretch、available和fill-available关键字究竟用哪个</p><p>3.1.3 深入了解min-content关键字</p><p>3.1.4 快速了解max-content关键字</p><p>3.2 深入了解CSS逻辑属性</p><p>3.2.1 CSS逻辑属性有限的使用场景</p><p>3.2.2 inline/block与start/end元素</p><p>3.2.3 width/height属性与inline-size/block-size逻辑属性</p><p>3.2.4 由margin/padding/border演变而来的逻辑属性</p><p>3.2.5 text-align属性支持的逻辑属性值</p><p>3.2.6 最有用的CSS逻辑属性inset</p><p>3.3 在CSS边框上做文章</p><p>3.3.1 昙花一现的CSS多边框</p><p>3.3.2 独一无二的border-image属性</p><p>3.3.3 border-image属性与渐变边框</p><p>3.4 position属性的增强</p><p>3.4.1 深入了解sticky属性值与黏性定位</p><p>3.4.2 position:sticky声明的精彩应用—层次滚动</p><p>3.5 font-family属性和@font-face规则新特性</p><p>3.5.1 system-ui等全新的通用字体族</p><p>3.5.2 local()函数与系统字体的调用</p><p>3.5.3 unicode-range属性的详细介绍</p><p>3.5.4 woff/woff2字体</p><p>3.5.5 font-display属性与自定义字体的加载渲染</p><p>3.6 字符单元的中断与换行</p><p>3.6.1 使用keep-all属性值优化中文排版</p><p>3.6.2 break-all属性值的问题和line-break属性</p><p>3.6.3 hyphens属性与连字符</p><p>3.6.4 与精确换行的控制</p><p>3.6.5 overflow-wrap:anywhere声明有什么用</p><p>3.7 text-align属性相关的新特性</p><p>3.7.1 match-parent等新属性值</p><p>3.7.2 text-align属性的字符对齐特性</p><p>3.8 text-decoration属性全新升级</p><p>3.8.1 text-decoration属性现在是一种缩写</p><p>3.8.2 text-decoration属性的累加特性</p><p>3.8.3 唯一实用的wavy波浪线</p><p>3.8.4 可能需要text-underline-position:under声明</p><p>3.8.5 更需要text-underline-offset属性</p><p>3.8.6 讲一讲text-decoration-skip属性的故事</p><p>3.9 color属性与颜色设置</p><p>3.9.1 148个颜色关键字</p><p>3.9.2 transparent关键字</p><p>3.9.3 currentColor关键字</p><p>3.9.4 RGB颜色和HSL颜色的新语法</p><p>3.10 必学必会的background属性新特性</p><p>3.10.1 最实用的当属background-size属性</p><p>3.10.2 background属性最成功的设计—多背景</p><p>3.10.3 background-clip属性与背景显示区域限制</p><p>3.10.4 background-clip:text声明与渐变文字效果</p><p>3.10.5 background-origin属性与背景定位原点控制</p><p>3.10.6 space和round平铺模式</p><p>3.10.7 可以指定background-position的起始方位了</p><p>3.11 outline相关新属性outline-offset</p><p>3.12 cursor属性新增的手形效果</p><p>3.12.1 放大手形zoom-in和缩小手形zoom-out简介</p><p>3.12.2 抓取手形grab和抓取手形grabbing简介</p><p>3.13 表格布局属性grid-template-areas的强化</p><p>3.13.1 grid-template-areas属性的完全介绍</p><p>3.13.2 grid-template-areas属性值的区域扩展</p><p>3.14 辅助性CSS生成内容属性content</p><p>3.14.1 content属性引发的伪类与伪元素</p><p>3.14.2 content属性完整语法解读</p><p>3.14.3 content属性的一些示例应用</p><p>第4章 面向细节元素的CSS新特性</p><p>4.1 CSS新属性详细解读</p><p>4.1.1 多功能矩形、椭圆和圆角</p><p>4.1.2 transform属性的2D、3D和综合变换</p><p>4.1.3 scale、rotate、skew、translate</p><p>4.1.4 transform-origin属性的多种值</p><p>4.1.5 perspective属性和perspective-origin属性</p><p>4.1.6 preserve-3d值</p><p>4.1.7 用matrix和matrix3d指定自己的变换</p><p>4.1.8 transform属性的混合变换</p><p>4.1.9 CSS动画animation属性和@keyframes规则</p><p>4.1.10 媒体查询@media规则和应用</p><p>4.2 过渡属性transition详解</p><p>4.2.1 transition-property属性</p><p>4.2.2 transition-duration属性</p><p>4.2.3 transition-timing-function属性</p><p>4.2.4 transition-delay属性</p><p>4.2.5 transition-shorthand属性</p><p>4.3 CSS滤镜效果filter</p><p>4.3.1 filter属性基本语法</p><p>4.3.2 filter属性的常用函数</p><p>4.4 CSS遮罩效果mask</p><p>4.4.1 mask属性的基本语法</p><p>4.4.2 mask-image属性</p><p>4.4.3 mask-mode属性</p><p>4.4.4 mask-size属性</p><p>4.4.5 mask-source-type属性</p><p>4.4.6 mask-repeat属性</p><p>4.4.7 mask-clip属性</p><p>4.4.8 mask-origin属性</p><p>4.4.9 mask-composite属性</p><p>4.4.10 mask属性的混合模式</p><p>4.5 CSS混合模式效果</p><p>4.5.1 mix-blend-mode属性</p><p>4.5.2 background-blend-mode属性</p><p>4.6 CSS滚动行为属性scroll-behavior</p><p>4.6.1 scroll-behavior属性的简单应用</p><p>4.7 动画属性animation详解</p><p>4.7.1 animation-name属性</p><p>4.7.2 animation-duration属性</p><p>4.7.3 animation-timing-function属性</p><p>4.7.4 animation-delay属性</p><p>4.7.5 animation-iteration-count属性</p><p>4.7.6 animation-direction属性</p><p>4.7.7 animation-fill-mode属性</p><p>4.7.8 animation-play-state属性</p><p>4.8 探究CSS伪类选择器</p><p>4.8.1 CSS伪类选择器的基本使用</p><p>4.8.2 first-child伪类选择器</p><p>4.8.3 last-child伪类选择器</p><p>4.8.4 nth-child伪类选择器</p><p>4.8.5 not伪类选择器</p><p>4.8.6 root伪类选择器</p><p>4.8.7 target伪类选择器</p><p>4.8.8 empty伪类选择器</p><p>4.8.9 enabled伪类选择器</p><p>4.8.10 disabled伪类选择器</p><p>4.8.11 checked伪类选择器</p><p>4.9 CSS伪元素选择器</p><p>4.9.1 CSS伪元素选择器的基本使用</p><p>4.9.2 before和after伪元素选择器</p><p>4.9.3 first-line和first-letter伪元素选择器</p><p>4.9.4 selection伪元素选择器</p><p>4.9.5 placeholder-shown伪元素选择器</p><p>4.9.6 backdrop伪元素选择器</p><p>4.9.7 marker伪元素选择器</p><p>4.9.8 dropped伪元素选择器</p><p>4.10 了解CSS自定义属性变量</p><p>4.10.1 CSS自定义属性的基本语法</p><p>4.10.2 使用CSS自定义属性</p><p>4.10.3 JavaScript中操作CSS自定义属性</p><p>4.11 CSS遮罩效果mask详解</p><p>4.11.1 mask-image属性</p><p>4.11.2 mask-mode属性</p><p>4.11.3 mask-size属性</p><p>4.11.4 mask-source-type属性</p><p>4.11.5 mask-repeat属性</p><p>4.11.6 mask-clip属性</p><p>4.11.7 mask-origin属性</p><p>4.11.8 mask-composite属性</p><p>4.11.9 mask属性的混合模式</p><p>第5章 CSS变量</p><p>5.1 什么是CSS变量</p><p>5.2 声明和使用CSS变量</p><p>5.3 CSS变量与JavaScript</p><p>5.4 变量的作用域</p><p>5.5 CSS变量的默认值</p><p>5.6 使用CSS变量进行主题切换</p><p>5.7 在媒体查询中使用CSS变量</p><p>5.8 使用CSS变量进行动画</p><p>5.9 总结</p><p>第6章 CSS模块和模块性</p><p>6.1 什么是CSS模块</p><p>6.2 创建和导出CSS模块</p><p>6.3 导入CSS模块</p><p>6.4 使用CSS模块</p><p>6.5 CSS模块的作用域</p><p>6.6 CSS模块的依赖和复用</p><p>6.7 CSS模块的热模块替换</p><p>6.8 CSS模块和构建工具</p><p>6.9 总结</p><p>第7章 响应式Web设计</p><p>7.1 什么是响应式Web设计</p><p>7.2 为什么需要响应式Web设计</p><p>7.3 响应式Web设计的核心概念</p><p>7.4 媒体查询@media规则</p><p>7.5 响应式图像</p><p>7.6 流式布局</p><p>7.7 弹性布局</p><p>7.8 视口单位</p><p>7.9 移动优先设计</p><p>7.10 响应式设计工具</p><p>7.11 总结</p><p>第8章 CSS框架和库</p><p>8.1 什CSS框架和库</p><p>8.2 常见的CSS框架和库</p><p>8.3 如何选择和使用CSS框架和库</p><p>8.4 自定义CSS框架和库</p><p>8.5 CSS框架和库的未来趋势</p><p>8.6 总结</p><p>第9章 浏览器兼容性与前端工具</p><p>9.1 什么是浏览器兼容性</p><p>9.2 浏览器兼容性的挑战</p><p>9.3 检测浏览器兼容性</p><p>9.4 处理浏览器兼容性问题</p><p>9.5 前端工具和浏览器兼容性</p><p>9.6 总结</p><p>第10章 CSS性能优化</p><p>10.1 什么是CSS性能优化</p><p>10.2 CSS性能优化的重要性</p><p>10.3 CSS性能优化的一般原则</p><p>10.4 选择器性能优化</p><p>10.5 属性性能优化</p><p>10.6 媒体查询性能优化</p><p>10.7 CSS动画性能优化</p><p>10.8 CSS预处理器的性能优化</p><p>10.9 总结</p><p>第11章 CSS安全性</p><p>11.1 什么是CSS安全性</p><p>11.2 CSS安全性的挑战</p><p>11.3 防止CSS注入攻击</p><p>11.4 防止CSS文件泄漏</p><p>11.5 防止CSS信息泄露</p><p>11.6 CSS安全性工具和资源</p><p>11.7 总结</p><p>第12章 未来的CSS</p><p>12.1 CSS的未来趋势</p><p>12.2 CSS Houdini</p><p>12.3 CSS Nesting</p><p>12.4 CSS Grid Layout Level 2</p><p>12.5 CSS Selectors Level 4</p><p>12.6 CSS Custom Properties for Cascading Variables Level 2</p><p>12.7 总结</p><p>第13章 实战：构建响应式Web页面</p><p>13.1 项目概述</p><p>13.2 项目准备</p><p>13.3 创建基本的HTML结构</p><p>13.4 设置全局样式</p><p>13.5 响应式导航栏</p><p>13.6 主页头部</p><p>13.7 主页服务</p><p>13.8 主页特征</p><p>13.9 主页客户评价</p><p>13.10 主页团队</p><p>13.11 主页联系</p><p>13.12 响应式页脚</p><p>13.13 响应式优化</p><p>13.14 项目测试</p><p>13.15 项目部署</p><p>13.16 总结</p><p>结束语</p><p>这本书主要介绍了CSS的基础知识和高级特性，以及在Web开发中如何使用它们。每一章都涵盖了不同的主题，从CSS选择器、布局和盒模型，到响应式Web设计、CSS变量和性能优化等方面都有涵盖。这本书还包括了一些实际项目的示例，以帮助读者将所学的知识应用到实际中。</p>',264);const m=p(C,[["render",function(p,n,r,o,s,C){const m=S("ArticleMetadata"),k=S("ClientOnly"),f=S("Books");return e(),a("div",null,[l,t(k,null,{default:i((()=>[t(m)])),_:1}),d,t(f,{name:"CSS新世界",src:"/book/cssxinshijie.jpg",date:"2021-08-10",author:"张鑫旭"}),c])}]]);export{s as __pageData,m as default};
